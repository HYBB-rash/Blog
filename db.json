{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/media/128.jpg","path":"media/128.jpg","modified":0,"renderable":0},{"_id":"source/media/144.jpg","path":"media/144.jpg","modified":0,"renderable":0},{"_id":"source/media/180.jpg","path":"media/180.jpg","modified":0,"renderable":0},{"_id":"source/media/192.jpg","path":"media/192.jpg","modified":0,"renderable":0},{"_id":"source/media/256.jpg","path":"media/256.jpg","modified":0,"renderable":0},{"_id":"source/media/48.jpg","path":"media/48.jpg","modified":0,"renderable":0},{"_id":"source/media/512.jpg","path":"media/512.jpg","modified":0,"renderable":0},{"_id":"source/media/64.jpg","path":"media/64.jpg","modified":0,"renderable":0},{"_id":"source/media/96.jpg","path":"media/96.jpg","modified":0,"renderable":0},{"_id":"source/media/apple-touch-icon.jpg","path":"media/apple-touch-icon.jpg","modified":0,"renderable":0},{"_id":"source/media/博客网站搭建总结/IMG_7761297CE669-1.jpeg","path":"media/博客网站搭建总结/IMG_7761297CE669-1.jpeg","modified":0,"renderable":0},{"_id":"source/media/博客网站搭建总结/IMG_3B0257C1D73E-1.jpeg","path":"media/博客网站搭建总结/IMG_3B0257C1D73E-1.jpeg","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-inside/source/3rdpartylicenses.txt","path":"3rdpartylicenses.txt","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/main.543c891b4aad158701f3.js","path":"main.543c891b4aad158701f3.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/polyfills.b7bf56fc45f931a8b83e.js","path":"polyfills.b7bf56fc45f931a8b83e.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/runtime.1ed960b0635ea0669f87.js","path":"runtime.1ed960b0635ea0669f87.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/styles.91e7dfca63c7c151daa6.css","path":"styles.91e7dfca63c7c151daa6.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/theme.9ecc9ab1.js","path":"theme.9ecc9ab1.js","modified":0,"renderable":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"8f9aa3a728a2e824a1a0f74293947581bb47adda","modified":1680968043430},{"_id":"source/_posts/macOS的虚拟桌面和窗口管理.md","hash":"e7a26166c595effa5e7d53fe580ef6bd0bac2cd6","modified":1680968043430},{"_id":"source/_posts/test.md","hash":"f2459f906c2b90a3086b64466192f8b7e07f2d01","modified":1680968043430},{"_id":"source/_posts/texgt.md","hash":"e35810c3d23b68608f53549315c851c056fa7153","modified":1680968043431},{"_id":"source/_posts/博客网站搭建总结.md","hash":"7805f6eb9225260a7d13cefad2a43eeedf331a6e","modified":1680968043431},{"_id":"source/_posts/自动构建脚本.md","hash":"3872e505629dfa36e535851296093ba5ff55f842","modified":1680968043431},{"_id":"source/_posts/自动构建脚本2-0.md","hash":"4c5e1e626772ed90ece1ff771e027030dcb9ddbb","modified":1680968043431},{"_id":"source/media/128.jpg","hash":"bae1b67c5eedf14dae4379b7707f0a0f42644374","modified":1680968043431},{"_id":"source/media/144.jpg","hash":"6de673b4aa2fee5231990c828a82ed9c94b1c485","modified":1680968043432},{"_id":"source/media/180.jpg","hash":"eacb054e5083b96ff1e33e5ef2ee018fd3fe6a89","modified":1680968043432},{"_id":"source/media/192.jpg","hash":"1f3fb1bb23e92e131b88c1ff55212aaec92352e7","modified":1680968043432},{"_id":"source/media/256.jpg","hash":"07cc17069ec7f0f7a1ae42d0cdca6fe5dd96bd14","modified":1680968043433},{"_id":"source/media/48.jpg","hash":"306983aaeb8495dec2979608ec9df455e6e7041a","modified":1680968043433},{"_id":"source/media/512.jpg","hash":"67e95ba54619482890eaf0886ef6cc7636c5588c","modified":1680968043433},{"_id":"source/media/64.jpg","hash":"33ab3f24b11f1e81009a9e3a97f6cb1ebeb54b97","modified":1680968043433},{"_id":"source/media/96.jpg","hash":"da0d8993b2b2a1a989c78a6ba168fb006a1d7cc2","modified":1680968043433},{"_id":"source/media/apple-touch-icon.jpg","hash":"eacb054e5083b96ff1e33e5ef2ee018fd3fe6a89","modified":1680968043434},{"_id":"node_modules/hexo-theme-inside/LICENSE","hash":"80e42bdfa4902549136f3a2445f16bff8ec46be8","modified":1680968074908},{"_id":"node_modules/hexo-theme-inside/README.md","hash":"e646ba8a95ba31d088ca21e518bd59a0390ec588","modified":1680968075002},{"_id":"node_modules/hexo-theme-inside/_config.yml","hash":"fe3f71e89395398c71ac629d6351412fa33b2c48","modified":1680968075003},{"_id":"node_modules/hexo-theme-inside/package.json","hash":"4cb0c940e3a473cab8b1140ba2b74783057f455d","modified":1680968075001},{"_id":"node_modules/hexo-theme-inside/README_zh-Hans.md","hash":"4fbdd86fba6988352422144ae917993bb68e82d9","modified":1680968075001},{"_id":"node_modules/hexo-theme-inside/languages/ja.yml","hash":"757de0ada468d30ff0b575981e3fc3b0c1d7a143","modified":1680968075003},{"_id":"node_modules/hexo-theme-inside/languages/zh-Hans.yml","hash":"c19d12bc4326f7963c7a21b83bd4279213310bc2","modified":1680968075003},{"_id":"node_modules/hexo-theme-inside/layout/index.njk","hash":"c9badf67c9048e1c46a4c6f232e33d33937342f0","modified":1680968075002},{"_id":"node_modules/hexo-theme-inside/lib/config.js","hash":"c1a36889230c0e744074e45a3ba5f1b551dc18c4","modified":1680968074991},{"_id":"node_modules/hexo-theme-inside/languages/zh-Hant.yml","hash":"e35078d3d5e6299178135aabdbb1b2a95252a42a","modified":1680968075003},{"_id":"node_modules/hexo-theme-inside/lib/configSchema.json","hash":"43f14fe0592685bedf493cfa1ae578548dbab99f","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/lib/utils.js","hash":"59cb0cf6828efa2c7229564292c9e139c9f10080","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/scripts/index.js","hash":"2163e057444c2e5e3b786d28500e9cc5467e3c6b","modified":1680968074994},{"_id":"node_modules/hexo-theme-inside/source/3rdpartylicenses.txt","hash":"1b7039121dbb0d2772eb0bfe827e029a144caef7","modified":1680968075002},{"_id":"node_modules/hexo-theme-inside/source/_manifest.json","hash":"da1182fcbe3cdfd9c1a031187b03208f088c89ac","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/languages/en.yml","hash":"9cb7e597a23fc9e1cf10b4f283ccbc0ea97cbb20","modified":1680968075003},{"_id":"node_modules/hexo-theme-inside/source/polyfills.b7bf56fc45f931a8b83e.js","hash":"4f742c8c6f028dc25a8a020f6909128b03cfda48","modified":1680968074998},{"_id":"node_modules/hexo-theme-inside/source/theme.9ecc9ab1.js","hash":"c8ddb3e8d21e4591fd8d3c8c002234183deb49a0","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/source/styles.91e7dfca63c7c151daa6.css","hash":"be513488e892c07b5734dd0a095d0c4fc4c7804b","modified":1680968074929},{"_id":"node_modules/hexo-theme-inside/lib/filter/index.js","hash":"ab87beb03adc8f8f273d59dd4403c4da8268ef83","modified":1680968074993},{"_id":"node_modules/hexo-theme-inside/lib/filter/post.js","hash":"23f17c0964fbe649a2b7ed1030755cc81455eadf","modified":1680968074998},{"_id":"node_modules/hexo-theme-inside/lib/filter/ssr.js","hash":"ed3786805f1be7a791efd7185e25ea41e7322d5e","modified":1680968074999},{"_id":"node_modules/hexo-theme-inside/lib/filter/templates.js","hash":"86b31cec8512f37824dc4b18c89d0cf7b5987de5","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/lib/generator/manifest.js","hash":"e6eb7d3353fb1e13218535a3987cd31d569fc5bd","modified":1680968074997},{"_id":"node_modules/hexo-theme-inside/lib/generator/index.js","hash":"31cb0d3cf08b65deb78e7a02110b6424d1fe2f04","modified":1680968074993},{"_id":"node_modules/hexo-theme-inside/lib/generator/config.js","hash":"495d9dee09f186e7ebe96cee18732e0a59b6d0a9","modified":1680968074992},{"_id":"node_modules/hexo-theme-inside/source/runtime.1ed960b0635ea0669f87.js","hash":"1a23d8cab7062a7fae5ed6184d88f6b37c77516b","modified":1680968074998},{"_id":"node_modules/hexo-theme-inside/lib/generator/sitemap.js","hash":"7939aac2e0d38ec342c0c289b37aed42262e86f2","modified":1680968074999},{"_id":"node_modules/hexo-theme-inside/lib/helper/ga.js","hash":"adc62bd06443a781d6046d3e78aa57b5e4291611","modified":1680968074992},{"_id":"node_modules/hexo-theme-inside/lib/generator/sw.js","hash":"216cc78d48e0dd3d0cff374c49bdc8e83b2ecd62","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/lib/helper/url_trim.js","hash":"a88302c028d2667d9336b72b50e0590e0b2edcd1","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/lib/helper/structured_data.js","hash":"682cfb827880ccfe5a972bb326ab4691cd8c470d","modified":1680968074999},{"_id":"node_modules/hexo-theme-inside/lib/plugins/cipher.js","hash":"ebf9e166e856980e27c1e8203e0a8dcf6ec3b69a","modified":1680968074990},{"_id":"node_modules/hexo-theme-inside/lib/plugins/manifest.json","hash":"65717c8073e334628d9c2821e848b47d2bac7919","modified":1680968075001},{"_id":"node_modules/hexo-theme-inside/lib/helper/index.js","hash":"93fbe9d8fe364cf4e2e55cc3d4d3156dde028f56","modified":1680968074993},{"_id":"node_modules/hexo-theme-inside/lib/plugins/disqus.js","hash":"363b194bf1441a40890ecc264622f4730a2a943b","modified":1680968074993},{"_id":"node_modules/hexo-theme-inside/lib/plugins/palette.js","hash":"29430b1146a30fa44406995d244a749cd8a77856","modified":1680968074997},{"_id":"node_modules/hexo-theme-inside/lib/renderer/index.js","hash":"c35a04ff425742ad9768f8942a8b3fcb00202ede","modified":1680968074994},{"_id":"node_modules/hexo-theme-inside/lib/tag/gist.js","hash":"4bedda6e6c07e2eeac3a3fc97617181287d77d34","modified":1680968074992},{"_id":"node_modules/hexo-theme-inside/lib/tag/index.js","hash":"bf75dd670a1d6ffffbacb183b406235780d680c6","modified":1680968074994},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/archives.js","hash":"b9c2e6ead1d280d8a2a4db4676b46b2fdf92ccb0","modified":1680968074987},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/categories.js","hash":"276dfc2d9e010a9f3815d76571a60ddcdb04b1fe","modified":1680968074988},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/pages.js","hash":"26b314ba0df5acf8b18a152811441b58a69201d0","modified":1680968074997},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/posts.js","hash":"cf7cb8b58714b457a028b14c92958127839aba26","modified":1680968074998},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/index.js","hash":"9bac29a0223eaf7f3aa69b04502fc049969ae78b","modified":1680968074993},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/search.js","hash":"d874785d284e1b8d18dbcb5358888e522b45988a","modified":1680968074999},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/index.js","hash":"cbad561e5fbaa126afcb7df990900afa4fc652ee","modified":1680968074994},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/tags.js","hash":"2a10e4c4d9c92e0ac26b3884511f12472d43898f","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/properties.js","hash":"bb306150254015f9bf6f9e58340eb521231a7e55","modified":1680968074998},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/mixins.js","hash":"e1377839483f2e6dacf5f158bc29d21e5093f27a","modified":1680968074997},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/collapse.js","hash":"eda5c79868f2aac2a2d5f82fe8a483c88f0a43da","modified":1680968074991},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/index.js","hash":"6d185c7c171606907e663b0ab99a9bcafeef9783","modified":1680968074994},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/timeline.js","hash":"16ffd617d146d672847a566a94e88aece0b642ea","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/lib/tag/canvas.js","hash":"24c02f85506c1f412a3386d14f1ceb074e4864e2","modified":1680968074988},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/tree.js","hash":"f7f30e3a1a5d29864f42b693f7a4a6c0a7fb05c2","modified":1680968075000},{"_id":"node_modules/hexo-theme-inside/source/main.543c891b4aad158701f3.js","hash":"9d0edfa9c6b5f269f1c2c5d622e23ec6dbd8141c","modified":1680968074996},{"_id":"source/media/博客网站搭建总结/IMG_7761297CE669-1.jpeg","hash":"6d40a0cd09a05ef8e4479fc532b9c8ccdeda4ff5","modified":1680968043459},{"_id":"source/media/博客网站搭建总结/IMG_3B0257C1D73E-1.jpeg","hash":"dcab96441ecf96c9b2f84f38be9dbab922661c82","modified":1680968043451},{"_id":"node_modules/hexo-theme-inside/source/_ssr.js","hash":"cdc036e56f497b4d2f933bc5fc19d61564e36beb","modified":1680968074986},{"_id":"public/manifest.json","hash":"bad21544d7d00d8562e170c5e2f5c765a04d975b","modified":1680968218184},{"_id":"public/sw.js","hash":"af77f597389bdf7eaffaa828695f10b19cc3bae4","modified":1680968218184},{"_id":"public/config.65b50d5cf987eedd3574.js","hash":"86c85f8700e96fed9a4ab7e3ef6d81134197628a","modified":1680968218184},{"_id":"public/api/MjAyMy8wNC8wOC9oZWxsby13b3JsZA.json","hash":"85495545f0fd45bc1fc3e1711cf20a0fce0c6de0","modified":1680968218184},{"_id":"public/api/MjAyMy8wMy8yOC9tYWNPU+eahOiZmuaLn+ahjOmdouWSjOeql+WPo+euoeeQhg.json","hash":"264dd0eb1cab231d2c28449db24bf314c1d6e653","modified":1680968218184},{"_id":"public/api/MjAyMy8wMy8yNy/ljZrlrqLnvZHnq5nmkK3lu7rmgLvnu5M.json","hash":"8cf6552963fcecc5291f84bddf62cc3a2cb3bf81","modified":1680968218184},{"_id":"public/api/MjAyMy8wMy8yNy90ZXhndA.json","hash":"866401ca8ab2f375241c1db5275bc4593b09a1cb","modified":1680968218184},{"_id":"public/api/MjAyMy8wMy8yNy/oh6rliqjmnoTlu7rohJrmnKwyLTA.json","hash":"0a459f5230030d337b8201b483ddcbf5488afc64","modified":1680968218184},{"_id":"public/api/MjAyMy8wMy8yNy/oh6rliqjmnoTlu7rohJrmnKw.json","hash":"0e0a0457eb6ac2c9eb5050675197c95fb46ecdcc","modified":1680968218184},{"_id":"public/api/MjAyMy8wMy8yNy90ZXN0.json","hash":"362e62af6d6f98d01a574ac2ebb2982e54fb39c9","modified":1680968218184},{"_id":"public/api/cGFnZQ.json","hash":"e10121899b46dcd24eaf17fd4762a352f44813f8","modified":1680968218184},{"_id":"public/api/dGFncw.json","hash":"f459eb9cad05554fb59e4d9a4048efeef68a9476","modified":1680968218184},{"_id":"public/api/dGFncy9iYXNo.json","hash":"eb6653902d55f3761c393146f953563bff159b0f","modified":1680968218184},{"_id":"public/api/dGFncy9jaGF0Z3B0.json","hash":"f5a130c310fc5335cbdc2f9273d051b0f69cd4d7","modified":1680968218184},{"_id":"public/api/dGFncy/ljZrlrqLnvZHnq5k.json","hash":"8d5ea742e3755fef0adf971b14f38471475161df","modified":1680968218184},{"_id":"public/api/dGFncy/mgLvnu5M.json","hash":"aea87de9594684479e8f73631a39fb39ed147e5d","modified":1680968218184},{"_id":"public/api/dGFncy/mtYvor5U.json","hash":"2f4c84a26189a08945cc8942dd9a4457f9d518f9","modified":1680968218184},{"_id":"public/api/dGFncy/ngYzmsLQ.json","hash":"c612320ed7da928cf00956148008a87ed2e55c9b","modified":1680968218184},{"_id":"public/api/dGFncy/orrDlvZU.json","hash":"a18fb77ff938c1ebb34703f0717d492241d7e213","modified":1680968218184},{"_id":"public/api/YXJjaGl2ZXM.json","hash":"e29bf46183d760e9ad5dfb87f534beb8bb8da536","modified":1680968218184},{"_id":"public/sitemap.xml","hash":"c2f1f1c7ddd93b6d2db1479c74530376f218b6ba","modified":1680968218184},{"_id":"public/404/index.html","hash":"2639629e1a0052d0626c9ac9d549d6c0b25f2c04","modified":1680973764327},{"_id":"public/2023/04/08/hello-world/index.html","hash":"a6ffd99cf2958c15214bd5a5c130854c9eeac0eb","modified":1680973764327},{"_id":"public/2023/03/28/macOS的虚拟桌面和窗口管理/index.html","hash":"4fb54d922077dbb12d1c6072ce3dc9e11585f2f8","modified":1680973764327},{"_id":"public/2023/03/27/博客网站搭建总结/index.html","hash":"845c07dfe466db199f0ce98e5906e9daa12b3c6f","modified":1680973764327},{"_id":"public/2023/03/27/texgt/index.html","hash":"07ea74722de8b73f72688f32566ed58de2b84d6a","modified":1680973764327},{"_id":"public/2023/03/27/自动构建脚本2-0/index.html","hash":"75da66cf921db9fe558cd25f7772e24acbe15172","modified":1680973764327},{"_id":"public/2023/03/27/自动构建脚本/index.html","hash":"b361cebd26a317e5ac56f624509e24737388162a","modified":1680973764327},{"_id":"public/2023/03/27/test/index.html","hash":"765ee0ac040605e95036783687d7ee55f5fb61a7","modified":1680973764327},{"_id":"public/index.html","hash":"783b31c2ee0d1bfd83cd7755172abb451efd358d","modified":1680973764327},{"_id":"public/tags/index.html","hash":"7a009000a4a13ccb36e711948d35b0ee351fa591","modified":1680973764327},{"_id":"public/tags/bash/index.html","hash":"d5176e7b64659877044765f20d31a27768fd289e","modified":1680973764327},{"_id":"public/tags/chatgpt/index.html","hash":"63056c85c640575f65474c3855fe16790fbb00ae","modified":1680973764327},{"_id":"public/tags/博客网站/index.html","hash":"5ee1ce08af81f33e3dc75505b2c86e93f3f7c734","modified":1680973764327},{"_id":"public/tags/总结/index.html","hash":"1adf8c690ff13d6ba8914bdb624ef6c4406dcda4","modified":1680973764327},{"_id":"public/tags/测试/index.html","hash":"25f44071e36bb904864473db78df9ea1bba2bf87","modified":1680973764327},{"_id":"public/tags/灌水/index.html","hash":"44b9a287e61b2e9aaf01b737b2f871e0dba936aa","modified":1680973764327},{"_id":"public/tags/记录/index.html","hash":"05ca08e2657f5775e7435c1c022d8ddfaf4543b8","modified":1680973764327},{"_id":"public/archives/index.html","hash":"0f7d6573d22f269559a3b1e251e6232132e93c03","modified":1680973764327},{"_id":"public/media/144.jpg","hash":"6de673b4aa2fee5231990c828a82ed9c94b1c485","modified":1680968218184},{"_id":"public/media/128.jpg","hash":"bae1b67c5eedf14dae4379b7707f0a0f42644374","modified":1680968218184},{"_id":"public/media/192.jpg","hash":"1f3fb1bb23e92e131b88c1ff55212aaec92352e7","modified":1680968218184},{"_id":"public/media/48.jpg","hash":"306983aaeb8495dec2979608ec9df455e6e7041a","modified":1680968218184},{"_id":"public/media/180.jpg","hash":"eacb054e5083b96ff1e33e5ef2ee018fd3fe6a89","modified":1680968218184},{"_id":"public/media/256.jpg","hash":"07cc17069ec7f0f7a1ae42d0cdca6fe5dd96bd14","modified":1680968218184},{"_id":"public/media/64.jpg","hash":"33ab3f24b11f1e81009a9e3a97f6cb1ebeb54b97","modified":1680968218184},{"_id":"public/media/96.jpg","hash":"da0d8993b2b2a1a989c78a6ba168fb006a1d7cc2","modified":1680968218184},{"_id":"public/media/apple-touch-icon.jpg","hash":"eacb054e5083b96ff1e33e5ef2ee018fd3fe6a89","modified":1680968218184},{"_id":"public/media/512.jpg","hash":"67e95ba54619482890eaf0886ef6cc7636c5588c","modified":1680968218184},{"_id":"public/3rdpartylicenses.txt","hash":"1b7039121dbb0d2772eb0bfe827e029a144caef7","modified":1680968218184},{"_id":"public/theme.9ecc9ab1.js","hash":"c8ddb3e8d21e4591fd8d3c8c002234183deb49a0","modified":1680968218184},{"_id":"public/runtime.1ed960b0635ea0669f87.js","hash":"1a23d8cab7062a7fae5ed6184d88f6b37c77516b","modified":1680968218184},{"_id":"public/polyfills.b7bf56fc45f931a8b83e.js","hash":"4f742c8c6f028dc25a8a020f6909128b03cfda48","modified":1680968218184},{"_id":"public/styles.91e7dfca63c7c151daa6.css","hash":"be513488e892c07b5734dd0a095d0c4fc4c7804b","modified":1680968218184},{"_id":"public/main.543c891b4aad158701f3.js","hash":"9d0edfa9c6b5f269f1c2c5d622e23ec6dbd8141c","modified":1680968218184},{"_id":"public/media/博客网站搭建总结/IMG_7761297CE669-1.jpeg","hash":"6d40a0cd09a05ef8e4479fc532b9c8ccdeda4ff5","modified":1680968218184},{"_id":"public/media/博客网站搭建总结/IMG_3B0257C1D73E-1.jpeg","hash":"dcab96441ecf96c9b2f84f38be9dbab922661c82","modified":1680968218184},{"_id":"source/favicon.ico","hash":"67e95ba54619482890eaf0886ef6cc7636c5588c","modified":1679914318576},{"_id":"public/config.35da2fc3809a29130ca8.js","hash":"215d0f6fb9543eca5ea8f63f8571bcab55119bce","modified":1680973764327},{"_id":"public/favicon.ico","hash":"67e95ba54619482890eaf0886ef6cc7636c5588c","modified":1680973764327}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags: [测试]\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-04-08T23:34:03.430Z","updated":"2023-04-08T15:34:03.430Z","comments":0,"layout":"post","photos":[],"link":"2023/04/08/hello-world","_id":"clg8508f900006yuzevilhm2h","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\">GitHub</a>.</p>\n<h2 id=\"quick-start\">Quick Start<a title=\"#quick-start\" href=\"#quick-start\"></a></h2>\n<h3 id=\"create-a-new-post\">Create a new post<a title=\"#create-a-new-post\" href=\"#create-a-new-post\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\">Writing</a></p>\n<h3 id=\"run-server\">Run server<a title=\"#run-server\" href=\"#run-server\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\">Server</a></p>\n<h3 id=\"generate-static-files\">Generate static files<a title=\"#generate-static-files\" href=\"#generate-static-files\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites<a title=\"#deploy-to-remote-sites\" href=\"#deploy-to-remote-sites\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\">GitHub</a>.</p>\n<h2 id=\"quick-start\">Quick Start<a title=\"#quick-start\" href=\"#quick-start\"></a></h2>\n<h3 id=\"create-a-new-post\">Create a new post<a title=\"#create-a-new-post\" href=\"#create-a-new-post\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\">Writing</a></p>\n<h3 id=\"run-server\">Run server<a title=\"#run-server\" href=\"#run-server\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\">Server</a></p>\n<h3 id=\"generate-static-files\">Generate static files<a title=\"#generate-static-files\" href=\"#generate-static-files\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites<a title=\"#deploy-to-remote-sites\" href=\"#deploy-to-remote-sites\"></a></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\">Deployment</a></p>\n","date_formatted":{"ll":"Apr 8, 2023","L":"04/08/2023","MM-DD":"04-08"},"plink":"http://man-her.tech/2023/04/08/hello-world/","type":"post","toc":[{"id":"quick-start","title":"Quick Start","index":"1","children":[{"id":"create-a-new-post","title":"Create a new post","index":"1.1"},{"id":"run-server","title":"Run server","index":"1.2"},{"id":"generate-static-files","title":"Generate static files","index":"1.3"},{"id":"deploy-to-remote-sites","title":"Deploy to remote sites","index":"1.4"}]}],"reading_time":"78 words in 1 min"},{"title":"自动构建脚本","date":"2023-03-27T02:39:45.000Z","_content":"\n刚刚搭建了一个新的 blog ,是使用的 Hexo . 于是为了方便构建, 我写了个很简单的脚本, (其实是让 chatgpt 写的).\n\n```bash\n#!/bin/bash\n\n# 从 GitHub 拉取代码更新\ngit pull github master\n\n# 执行 hexo generate\nhexo generate\n```\n\n放在项目文件夹下, 直接构建即可.","source":"_posts/自动构建脚本.md","raw":"---\ntitle: 自动构建脚本\ndate: 2023-03-27 02:39:45\ntags: [博客网站, bash, chatgpt]\n---\n\n刚刚搭建了一个新的 blog ,是使用的 Hexo . 于是为了方便构建, 我写了个很简单的脚本, (其实是让 chatgpt 写的).\n\n```bash\n#!/bin/bash\n\n# 从 GitHub 拉取代码更新\ngit pull github master\n\n# 执行 hexo generate\nhexo generate\n```\n\n放在项目文件夹下, 直接构建即可.","slug":"自动构建脚本","published":1,"updated":"2023-04-08T15:34:03.431Z","comments":0,"layout":"post","photos":[],"link":"2023/03/27/自动构建脚本","_id":"clg8508fd00016yuz1c7fapid","content":"<p>刚刚搭建了一个新的 blog ,是使用的 Hexo . 于是为了方便构建, 我写了个很简单的脚本, (其实是让 chatgpt 写的).</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从 GitHub 拉取代码更新</span></span><br><span class=\"line\">git pull github master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行 hexo generate</span></span><br><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n<p>放在项目文件夹下, 直接构建即可.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>刚刚搭建了一个新的 blog ,是使用的 Hexo . 于是为了方便构建, 我写了个很简单的脚本, (其实是让 chatgpt 写的).</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从 GitHub 拉取代码更新</span></span><br><span class=\"line\">git pull github master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行 hexo generate</span></span><br><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n<p>放在项目文件夹下, 直接构建即可.</p>\n","date_formatted":{"ll":"Mar 27, 2023","L":"03/27/2023","MM-DD":"03-27"},"plink":"http://man-her.tech/2023/03/27/自动构建脚本/","type":"post","reading_time":"81 words in 1 min"},{"title":"texgt","date":"2023-03-27T03:19:41.000Z","_content":"# 这是一篇测试文章\n\n这是一篇测试文章, 测试我的博客有没有正常运作.","source":"_posts/texgt.md","raw":"---\ntitle: texgt\ndate: 2023-03-27 03:19:41\ntags: [测试]\n---\n# 这是一篇测试文章\n\n这是一篇测试文章, 测试我的博客有没有正常运作.","slug":"texgt","published":1,"updated":"2023-04-08T15:34:03.431Z","comments":0,"layout":"post","photos":[],"link":"2023/03/27/texgt","_id":"clg8508ff00036yuza9yb1oxh","content":"<h1 id=\"这是一篇测试文章\">这是一篇测试文章<a title=\"#这是一篇测试文章\" href=\"#这是一篇测试文章\"></a></h1>\n<p>这是一篇测试文章, 测试我的博客有没有正常运作.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"这是一篇测试文章\">这是一篇测试文章<a title=\"#这是一篇测试文章\" href=\"#这是一篇测试文章\"></a></h1>\n<p>这是一篇测试文章, 测试我的博客有没有正常运作.</p>\n","date_formatted":{"ll":"Mar 27, 2023","L":"03/27/2023","MM-DD":"03-27"},"plink":"http://man-her.tech/2023/03/27/texgt/","type":"post","toc":[{"id":"这是一篇测试文章","title":"这是一篇测试文章","index":"1"}],"reading_time":"29 words in 1 min"},{"title":"自动构建脚本2.0","date":"2023-03-27T03:08:19.000Z","_content":"\n自动构建脚本更新了一版, 做到无感更新. 主要是通过检测 GitHub 的最新版本是否和现在的版本一致, 如果不一致则立刻发起更新和构建.\n\n新脚本如下:\n\n```bash\n#!/bin/bash\n\nROOT=\"项目的位置\"\nLOG_FILE=\"$ROOT/logs/update.log\"\n\n# 将当前时间戳写入日志文件\necho \"[$(date)] Checking for updates...\" >> $LOG_FILE\n\ncd \"$ROOT\"\n\nremote_hash=$(git ls-remote 「我的 GitHub url」 -h refs/heads/master | awk '{print $1}')\nlocal_hash=$(git rev-parse HEAD)\n\necho \"[$(date)] Remote hash $remote_hash. Local hash $local_hash.\" >> $LOG_FILE\n\nif [ \"$remote_hash\" != \"$local_hash\" ]; then\n\n    echo \"[$(date)] Update found. Pulling changes and generating...\" >> $LOG_FILE\n\n    # 从 GitHub 拉取代码更新\n    git pull github master >> $LOG_FILE 2>&1\n\n    # 执行 hexo generate\n    hexo generate >> $LOG_FILE 2>&1\n\n    echo \"[$(date)] Update and generation completed.\" >> $LOG_FILE\nelse\n    echo \"[$(date)] No updates found.\" >> $LOG_FILE\nfi\n\necho \"[$(date)] ..........................................................................................................\" >> $LOG_FILE\n\n```\n\n然后在服务器上设置定时任务即可.\n\n```bash\n*/5 * * * * /path/to/auto_update_with_log.sh\n```\n\n","source":"_posts/自动构建脚本2-0.md","raw":"---\ntitle: 自动构建脚本2.0\ndate: 2023-03-27 03:08:19\ntags: [博客网站, bash, chatgpt]\n---\n\n自动构建脚本更新了一版, 做到无感更新. 主要是通过检测 GitHub 的最新版本是否和现在的版本一致, 如果不一致则立刻发起更新和构建.\n\n新脚本如下:\n\n```bash\n#!/bin/bash\n\nROOT=\"项目的位置\"\nLOG_FILE=\"$ROOT/logs/update.log\"\n\n# 将当前时间戳写入日志文件\necho \"[$(date)] Checking for updates...\" >> $LOG_FILE\n\ncd \"$ROOT\"\n\nremote_hash=$(git ls-remote 「我的 GitHub url」 -h refs/heads/master | awk '{print $1}')\nlocal_hash=$(git rev-parse HEAD)\n\necho \"[$(date)] Remote hash $remote_hash. Local hash $local_hash.\" >> $LOG_FILE\n\nif [ \"$remote_hash\" != \"$local_hash\" ]; then\n\n    echo \"[$(date)] Update found. Pulling changes and generating...\" >> $LOG_FILE\n\n    # 从 GitHub 拉取代码更新\n    git pull github master >> $LOG_FILE 2>&1\n\n    # 执行 hexo generate\n    hexo generate >> $LOG_FILE 2>&1\n\n    echo \"[$(date)] Update and generation completed.\" >> $LOG_FILE\nelse\n    echo \"[$(date)] No updates found.\" >> $LOG_FILE\nfi\n\necho \"[$(date)] ..........................................................................................................\" >> $LOG_FILE\n\n```\n\n然后在服务器上设置定时任务即可.\n\n```bash\n*/5 * * * * /path/to/auto_update_with_log.sh\n```\n\n","slug":"自动构建脚本2-0","published":1,"updated":"2023-04-08T15:34:03.431Z","comments":0,"layout":"post","photos":[],"link":"2023/03/27/自动构建脚本2-0","_id":"clg8508ff00046yuzgnf0enal","content":"<p>自动构建脚本更新了一版, 做到无感更新. 主要是通过检测 GitHub 的最新版本是否和现在的版本一致, 如果不一致则立刻发起更新和构建.</p>\n<p>新脚本如下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">ROOT=<span class=\"string\">&quot;项目的位置&quot;</span></span><br><span class=\"line\">LOG_FILE=<span class=\"string\">&quot;<span class=\"variable\">$ROOT</span>/logs/update.log&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将当前时间戳写入日志文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Checking for updates...&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"variable\">$ROOT</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">remote_hash=$(git ls-remote 「我的 GitHub url」 -h refs/heads/master | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">local_hash=$(git rev-parse HEAD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Remote hash <span class=\"variable\">$remote_hash</span>. Local hash <span class=\"variable\">$local_hash</span>.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$remote_hash</span>&quot;</span> != <span class=\"string\">&quot;<span class=\"variable\">$local_hash</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Update found. Pulling changes and generating...&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 从 GitHub 拉取代码更新</span></span><br><span class=\"line\">    git pull github master &gt;&gt; <span class=\"variable\">$LOG_FILE</span> 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 执行 hexo generate</span></span><br><span class=\"line\">    hexo generate &gt;&gt; <span class=\"variable\">$LOG_FILE</span> 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Update and generation completed.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] No updates found.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] ..........................................................................................................&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后在服务器上设置定时任务即可.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/5 * * * * /path/to/auto_update_with_log.sh</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>自动构建脚本更新了一版, 做到无感更新. 主要是通过检测 GitHub 的最新版本是否和现在的版本一致, 如果不一致则立刻发起更新和构建.</p>\n<p>新脚本如下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">ROOT=<span class=\"string\">&quot;项目的位置&quot;</span></span><br><span class=\"line\">LOG_FILE=<span class=\"string\">&quot;<span class=\"variable\">$ROOT</span>/logs/update.log&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将当前时间戳写入日志文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Checking for updates...&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"variable\">$ROOT</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">remote_hash=$(git ls-remote 「我的 GitHub url」 -h refs/heads/master | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">local_hash=$(git rev-parse HEAD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Remote hash <span class=\"variable\">$remote_hash</span>. Local hash <span class=\"variable\">$local_hash</span>.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$remote_hash</span>&quot;</span> != <span class=\"string\">&quot;<span class=\"variable\">$local_hash</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Update found. Pulling changes and generating...&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 从 GitHub 拉取代码更新</span></span><br><span class=\"line\">    git pull github master &gt;&gt; <span class=\"variable\">$LOG_FILE</span> 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 执行 hexo generate</span></span><br><span class=\"line\">    hexo generate &gt;&gt; <span class=\"variable\">$LOG_FILE</span> 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Update and generation completed.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] No updates found.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] ..........................................................................................................&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后在服务器上设置定时任务即可.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/5 * * * * /path/to/auto_update_with_log.sh</span><br></pre></td></tr></table></figure>\n","date_formatted":{"ll":"Mar 27, 2023","L":"03/27/2023","MM-DD":"03-27"},"plink":"http://man-her.tech/2023/03/27/自动构建脚本2-0/","type":"post","reading_time":"230 words in 2 min"},{"title":"test","date":"2023-03-27T02:28:27.000Z","_content":"\n# 这是一篇测试文章\n\n这是一篇测试文章, 测试我的博客有没有正常运作.","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2023-03-27 02:28:27\ntags: [测试]\n---\n\n# 这是一篇测试文章\n\n这是一篇测试文章, 测试我的博客有没有正常运作.","slug":"test","published":1,"updated":"2023-04-08T15:34:03.430Z","comments":0,"layout":"post","photos":[],"link":"2023/03/27/test","_id":"clg8508fg00056yuz87gr8js6","content":"<h1 id=\"这是一篇测试文章\">这是一篇测试文章<a title=\"#这是一篇测试文章\" href=\"#这是一篇测试文章\"></a></h1>\n<p>这是一篇测试文章, 测试我的博客有没有正常运作.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"这是一篇测试文章\">这是一篇测试文章<a title=\"#这是一篇测试文章\" href=\"#这是一篇测试文章\"></a></h1>\n<p>这是一篇测试文章, 测试我的博客有没有正常运作.</p>\n","date_formatted":{"ll":"Mar 27, 2023","L":"03/27/2023","MM-DD":"03-27"},"plink":"http://man-her.tech/2023/03/27/test/","type":"post","toc":[{"id":"这是一篇测试文章","title":"这是一篇测试文章","index":"1"}],"reading_time":"29 words in 1 min"},{"title":"macOS的虚拟桌面和窗口管理","date":"2023-03-28T21:24:06.000Z","_content":"\n之前一直使用的是 Windows, 最近换成了 macOS ,发现实在是太多东西不一样了. 快捷键的不一致导致两个平台切换用起来的问题就不提了, 最令我疑惑的就是 macOS 和 Windows 不太一致的多桌面和窗口管理.\n\n在 Windows 中, 强调的是一个虚拟桌面对应一个场景. 只要你的应用支持多窗口, 打开的窗口就是在对应的虚拟桌面下. 这里不讨论特殊情况(微软自己的 excel 就不是这样的), 绝大部分都是能做到把一个场景的应用都隔离在一个虚拟桌面中.\n\n对应到 macOS 中, 情况发生了变化. 首先全屏就一定会占领一个虚拟桌面. 如果打开了之前就打开过的 app, 他做的事情是直接跳转到对应的桌面……总之在这里, 虚拟桌面的意义就不再是隔离场景了.否则不会出现全屏一个应用居然是开一个虚拟桌面这种操作.\n\n同时最蛋疼的是, macOS 的虚拟桌面是会根据你的使用情况自动帮你把虚拟桌面的位置排序的! 刚刚从 Windows 来到 macOS 的我真的对这个特性一脸懵逼.\n\n既来之则安之, 不要把以前的习惯强行带到别的地方, 应该搞清楚它推荐的方式, 再将其融合进来, 获得一个新的操作方式, 我认为这才是正确的接待新事物的办法.\n\n# macOS 的核心理念是专注一件事\n\n经过我一段时间的摸索, 我得出一个结论: macOS 它核心的理念是希望你能完全 focus 一件事情. 他的窗口管理和虚拟桌面不是为了隔离场景, 而是为了你能专注在一件事情上.\n\n> #### 为什么?\n>\n> 最有力的证据, 就是它全屏的逻辑是占领一个虚拟桌面. 这个设置强力到你没法靠改设置去关闭. 且默认的设置是将除了这个应用以外的所有信息都隐藏起来.\n>\n> 可能有疑惑的点是: 很多时候一件事情不是一个应用就能完成的. 这个问题的答案有两个答案, 第一个是 mission control, 第二个是新功能 **台前调度** .\n>\n> 至于为什么会跳转, 我想可能是它自己系统上设计的问题. 理论上其实都是完全隔离的, 跳转是因为我们是试图打开这个应用的第二个窗口, 并且希望这个窗口在自己希望的虚拟桌面上保存, 但对于 macOS 来说, 他们都是一个 app ,你要使用当然是跳回到它存在桌面上. \n\n## mission control\n\n我对于mission control 的 **最佳实践** 是:\n\n1. 每个虚拟桌面最多打开 3 个应用, 切换应用使用快捷键 command + \\`.\n2. 多出来的应用新建虚拟桌面, 也是 3 个一组. (全屏也算)\n3. 一般情况下不会超过 9 个, 总之控制在三个虚拟桌面(完成一件事情)\n4. 遇到多窗口应用, 不要直接打开而是新建窗口.\n\n然后平时就是疯狂 command + \\` 切换窗口, 需要换虚拟桌面都是先往上推, 左划右划然后选应用. 由于都是 3 个, 你很快就会发现在哪, 不用乱翻, 也不会出现 mission controll 窗口太多找不到的情况. 如果是单应用全屏, 则虚拟桌面的名字就是应用, 直接切过去就行了.\n\n这么做就够用了, 可以让你完全 focus 单个任务. 问题是这样当你同时做几个大任务的时候, 虚拟桌面会异常混乱(虚拟桌面会按使用频率排序的作用是在这, 这样可以让你把最常用的虚拟桌面靠在一起, 方便你切换).\n\n## 台前调度\n\n台前调度对我来说是更实用的功能.\n\n1. 每个 stage 都控制在 3 个左右, 切换应用使用快捷键 command + \\`.\n2. 不使用全屏, 只双击窗口放大.\n3. 遇到多窗口应用, 不要直接打开而是新建窗口.\n\n一般不换虚拟桌面, 都是等你要换大任务的时候再换. 平时直接往左一探, 找到程序组即可. 大部分时候都是在疯狂 command + \\` 即可. 因为只有三个程序, 切来切去都是这几个, 很高效. 换工作流的时候切一下 stage 即可.\n\n这个是最好用的, 可以避免虚拟桌面太多的问题. 一个桌面也代表了一个大任务, 很合理.\n\n然而还是有缺点的, 就是我还没找到可以快捷键切换 stage 的办法. 有快捷键才是最快的办法, 往左探还不是效率最高的.\n\n---\n\n遗憾的是, 不管是哪个方法, 由于 macOS 的自身的设计, 多窗口应用都视为同一个 app , 我无法使用聚焦搜索直接打开我想用的应用, 会被莫名其妙的换到我不需要的桌面, 通常我都需要自己找到应用, 右键新建窗口才能正常使用. 希望以后的更新可以解决这个问题.\n\n> #### 吐槽\n>\n> 我其实是怀抱这很高的期待来使用 macOS 的, 但实际上还是有很多意想不到的小毛病. 比如外界显示器的时候, 屏幕的分辨率改变之后双击窗口经常不是我预期中的放大, 而是不知道缩到哪里去……小毛病还是有不少的.\n>\n> 不过我个人感觉 macOS 还是更适合工作, 设计理念偏向帮助你专注在一件事上, 并且各种生态服务让我不再需要拿起手机看消息. 很棒. 这点是 Windows 没法比的.","source":"_posts/macOS的虚拟桌面和窗口管理.md","raw":"---\ntitle: macOS的虚拟桌面和窗口管理\ndate: 2023-03-28 21:24:06\ntags:\n---\n\n之前一直使用的是 Windows, 最近换成了 macOS ,发现实在是太多东西不一样了. 快捷键的不一致导致两个平台切换用起来的问题就不提了, 最令我疑惑的就是 macOS 和 Windows 不太一致的多桌面和窗口管理.\n\n在 Windows 中, 强调的是一个虚拟桌面对应一个场景. 只要你的应用支持多窗口, 打开的窗口就是在对应的虚拟桌面下. 这里不讨论特殊情况(微软自己的 excel 就不是这样的), 绝大部分都是能做到把一个场景的应用都隔离在一个虚拟桌面中.\n\n对应到 macOS 中, 情况发生了变化. 首先全屏就一定会占领一个虚拟桌面. 如果打开了之前就打开过的 app, 他做的事情是直接跳转到对应的桌面……总之在这里, 虚拟桌面的意义就不再是隔离场景了.否则不会出现全屏一个应用居然是开一个虚拟桌面这种操作.\n\n同时最蛋疼的是, macOS 的虚拟桌面是会根据你的使用情况自动帮你把虚拟桌面的位置排序的! 刚刚从 Windows 来到 macOS 的我真的对这个特性一脸懵逼.\n\n既来之则安之, 不要把以前的习惯强行带到别的地方, 应该搞清楚它推荐的方式, 再将其融合进来, 获得一个新的操作方式, 我认为这才是正确的接待新事物的办法.\n\n# macOS 的核心理念是专注一件事\n\n经过我一段时间的摸索, 我得出一个结论: macOS 它核心的理念是希望你能完全 focus 一件事情. 他的窗口管理和虚拟桌面不是为了隔离场景, 而是为了你能专注在一件事情上.\n\n> #### 为什么?\n>\n> 最有力的证据, 就是它全屏的逻辑是占领一个虚拟桌面. 这个设置强力到你没法靠改设置去关闭. 且默认的设置是将除了这个应用以外的所有信息都隐藏起来.\n>\n> 可能有疑惑的点是: 很多时候一件事情不是一个应用就能完成的. 这个问题的答案有两个答案, 第一个是 mission control, 第二个是新功能 **台前调度** .\n>\n> 至于为什么会跳转, 我想可能是它自己系统上设计的问题. 理论上其实都是完全隔离的, 跳转是因为我们是试图打开这个应用的第二个窗口, 并且希望这个窗口在自己希望的虚拟桌面上保存, 但对于 macOS 来说, 他们都是一个 app ,你要使用当然是跳回到它存在桌面上. \n\n## mission control\n\n我对于mission control 的 **最佳实践** 是:\n\n1. 每个虚拟桌面最多打开 3 个应用, 切换应用使用快捷键 command + \\`.\n2. 多出来的应用新建虚拟桌面, 也是 3 个一组. (全屏也算)\n3. 一般情况下不会超过 9 个, 总之控制在三个虚拟桌面(完成一件事情)\n4. 遇到多窗口应用, 不要直接打开而是新建窗口.\n\n然后平时就是疯狂 command + \\` 切换窗口, 需要换虚拟桌面都是先往上推, 左划右划然后选应用. 由于都是 3 个, 你很快就会发现在哪, 不用乱翻, 也不会出现 mission controll 窗口太多找不到的情况. 如果是单应用全屏, 则虚拟桌面的名字就是应用, 直接切过去就行了.\n\n这么做就够用了, 可以让你完全 focus 单个任务. 问题是这样当你同时做几个大任务的时候, 虚拟桌面会异常混乱(虚拟桌面会按使用频率排序的作用是在这, 这样可以让你把最常用的虚拟桌面靠在一起, 方便你切换).\n\n## 台前调度\n\n台前调度对我来说是更实用的功能.\n\n1. 每个 stage 都控制在 3 个左右, 切换应用使用快捷键 command + \\`.\n2. 不使用全屏, 只双击窗口放大.\n3. 遇到多窗口应用, 不要直接打开而是新建窗口.\n\n一般不换虚拟桌面, 都是等你要换大任务的时候再换. 平时直接往左一探, 找到程序组即可. 大部分时候都是在疯狂 command + \\` 即可. 因为只有三个程序, 切来切去都是这几个, 很高效. 换工作流的时候切一下 stage 即可.\n\n这个是最好用的, 可以避免虚拟桌面太多的问题. 一个桌面也代表了一个大任务, 很合理.\n\n然而还是有缺点的, 就是我还没找到可以快捷键切换 stage 的办法. 有快捷键才是最快的办法, 往左探还不是效率最高的.\n\n---\n\n遗憾的是, 不管是哪个方法, 由于 macOS 的自身的设计, 多窗口应用都视为同一个 app , 我无法使用聚焦搜索直接打开我想用的应用, 会被莫名其妙的换到我不需要的桌面, 通常我都需要自己找到应用, 右键新建窗口才能正常使用. 希望以后的更新可以解决这个问题.\n\n> #### 吐槽\n>\n> 我其实是怀抱这很高的期待来使用 macOS 的, 但实际上还是有很多意想不到的小毛病. 比如外界显示器的时候, 屏幕的分辨率改变之后双击窗口经常不是我预期中的放大, 而是不知道缩到哪里去……小毛病还是有不少的.\n>\n> 不过我个人感觉 macOS 还是更适合工作, 设计理念偏向帮助你专注在一件事上, 并且各种生态服务让我不再需要拿起手机看消息. 很棒. 这点是 Windows 没法比的.","slug":"macOS的虚拟桌面和窗口管理","published":1,"updated":"2023-04-08T15:34:03.430Z","comments":0,"layout":"post","photos":[],"link":"2023/03/28/macOS的虚拟桌面和窗口管理","_id":"clg8508fg00086yuzgnv0chhq","content":"<p>之前一直使用的是 Windows, 最近换成了 macOS ,发现实在是太多东西不一样了. 快捷键的不一致导致两个平台切换用起来的问题就不提了, 最令我疑惑的就是 macOS 和 Windows 不太一致的多桌面和窗口管理.</p>\n<p>在 Windows 中, 强调的是一个虚拟桌面对应一个场景. 只要你的应用支持多窗口, 打开的窗口就是在对应的虚拟桌面下. 这里不讨论特殊情况(微软自己的 excel 就不是这样的), 绝大部分都是能做到把一个场景的应用都隔离在一个虚拟桌面中.</p>\n<p>对应到 macOS 中, 情况发生了变化. 首先全屏就一定会占领一个虚拟桌面. 如果打开了之前就打开过的 app, 他做的事情是直接跳转到对应的桌面……总之在这里, 虚拟桌面的意义就不再是隔离场景了.否则不会出现全屏一个应用居然是开一个虚拟桌面这种操作.</p>\n<p>同时最蛋疼的是, macOS 的虚拟桌面是会根据你的使用情况自动帮你把虚拟桌面的位置排序的! 刚刚从 Windows 来到 macOS 的我真的对这个特性一脸懵逼.</p>\n<p>既来之则安之, 不要把以前的习惯强行带到别的地方, 应该搞清楚它推荐的方式, 再将其融合进来, 获得一个新的操作方式, 我认为这才是正确的接待新事物的办法.</p>\n<h1 id=\"macos-的核心理念是专注一件事\">macOS 的核心理念是专注一件事<a title=\"#macos-的核心理念是专注一件事\" href=\"#macos-的核心理念是专注一件事\"></a></h1>\n<p>经过我一段时间的摸索, 我得出一个结论: macOS 它核心的理念是希望你能完全 focus 一件事情. 他的窗口管理和虚拟桌面不是为了隔离场景, 而是为了你能专注在一件事情上.</p>\n<blockquote>\n<h4 id=\"为什么?\">为什么?<a title=\"#为什么?\" href=\"#为什么?\"></a></h4>\n<p>最有力的证据, 就是它全屏的逻辑是占领一个虚拟桌面. 这个设置强力到你没法靠改设置去关闭. 且默认的设置是将除了这个应用以外的所有信息都隐藏起来.</p>\n<p>可能有疑惑的点是: 很多时候一件事情不是一个应用就能完成的. 这个问题的答案有两个答案, 第一个是 mission control, 第二个是新功能 <strong>台前调度</strong> .</p>\n<p>至于为什么会跳转, 我想可能是它自己系统上设计的问题. 理论上其实都是完全隔离的, 跳转是因为我们是试图打开这个应用的第二个窗口, 并且希望这个窗口在自己希望的虚拟桌面上保存, 但对于 macOS 来说, 他们都是一个 app ,你要使用当然是跳回到它存在桌面上.</p>\n</blockquote>\n<h2 id=\"mission-control\">mission control<a title=\"#mission-control\" href=\"#mission-control\"></a></h2>\n<p>我对于mission control 的 <strong>最佳实践</strong> 是:</p>\n<ol>\n<li>每个虚拟桌面最多打开 3 个应用, 切换应用使用快捷键 command + `.</li>\n<li>多出来的应用新建虚拟桌面, 也是 3 个一组. (全屏也算)</li>\n<li>一般情况下不会超过 9 个, 总之控制在三个虚拟桌面(完成一件事情)</li>\n<li>遇到多窗口应用, 不要直接打开而是新建窗口.</li>\n</ol>\n<p>然后平时就是疯狂 command + ` 切换窗口, 需要换虚拟桌面都是先往上推, 左划右划然后选应用. 由于都是 3 个, 你很快就会发现在哪, 不用乱翻, 也不会出现 mission controll 窗口太多找不到的情况. 如果是单应用全屏, 则虚拟桌面的名字就是应用, 直接切过去就行了.</p>\n<p>这么做就够用了, 可以让你完全 focus 单个任务. 问题是这样当你同时做几个大任务的时候, 虚拟桌面会异常混乱(虚拟桌面会按使用频率排序的作用是在这, 这样可以让你把最常用的虚拟桌面靠在一起, 方便你切换).</p>\n<h2 id=\"台前调度\">台前调度<a title=\"#台前调度\" href=\"#台前调度\"></a></h2>\n<p>台前调度对我来说是更实用的功能.</p>\n<ol>\n<li>每个 stage 都控制在 3 个左右, 切换应用使用快捷键 command + `.</li>\n<li>不使用全屏, 只双击窗口放大.</li>\n<li>遇到多窗口应用, 不要直接打开而是新建窗口.</li>\n</ol>\n<p>一般不换虚拟桌面, 都是等你要换大任务的时候再换. 平时直接往左一探, 找到程序组即可. 大部分时候都是在疯狂 command + ` 即可. 因为只有三个程序, 切来切去都是这几个, 很高效. 换工作流的时候切一下 stage 即可.</p>\n<p>这个是最好用的, 可以避免虚拟桌面太多的问题. 一个桌面也代表了一个大任务, 很合理.</p>\n<p>然而还是有缺点的, 就是我还没找到可以快捷键切换 stage 的办法. 有快捷键才是最快的办法, 往左探还不是效率最高的.</p>\n<hr>\n<p>遗憾的是, 不管是哪个方法, 由于 macOS 的自身的设计, 多窗口应用都视为同一个 app , 我无法使用聚焦搜索直接打开我想用的应用, 会被莫名其妙的换到我不需要的桌面, 通常我都需要自己找到应用, 右键新建窗口才能正常使用. 希望以后的更新可以解决这个问题.</p>\n<blockquote>\n<h4 id=\"吐槽\">吐槽<a title=\"#吐槽\" href=\"#吐槽\"></a></h4>\n<p>我其实是怀抱这很高的期待来使用 macOS 的, 但实际上还是有很多意想不到的小毛病. 比如外界显示器的时候, 屏幕的分辨率改变之后双击窗口经常不是我预期中的放大, 而是不知道缩到哪里去……小毛病还是有不少的.</p>\n<p>不过我个人感觉 macOS 还是更适合工作, 设计理念偏向帮助你专注在一件事上, 并且各种生态服务让我不再需要拿起手机看消息. 很棒. 这点是 Windows 没法比的.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>之前一直使用的是 Windows, 最近换成了 macOS ,发现实在是太多东西不一样了. 快捷键的不一致导致两个平台切换用起来的问题就不提了, 最令我疑惑的就是 macOS 和 Windows 不太一致的多桌面和窗口管理.</p>\n<p>在 Windows 中, 强调的是一个虚拟桌面对应一个场景. 只要你的应用支持多窗口, 打开的窗口就是在对应的虚拟桌面下. 这里不讨论特殊情况(微软自己的 excel 就不是这样的), 绝大部分都是能做到把一个场景的应用都隔离在一个虚拟桌面中.</p>\n<p>对应到 macOS 中, 情况发生了变化. 首先全屏就一定会占领一个虚拟桌面. 如果打开了之前就打开过的 app, 他做的事情是直接跳转到对应的桌面……总之在这里, 虚拟桌面的意义就不再是隔离场景了.否则不会出现全屏一个应用居然是开一个虚拟桌面这种操作.</p>\n<p>同时最蛋疼的是, macOS 的虚拟桌面是会根据你的使用情况自动帮你把虚拟桌面的位置排序的! 刚刚从 Windows 来到 macOS 的我真的对这个特性一脸懵逼.</p>\n<p>既来之则安之, 不要把以前的习惯强行带到别的地方, 应该搞清楚它推荐的方式, 再将其融合进来, 获得一个新的操作方式, 我认为这才是正确的接待新事物的办法.</p>\n<h1 id=\"macos-的核心理念是专注一件事\">macOS 的核心理念是专注一件事<a title=\"#macos-的核心理念是专注一件事\" href=\"#macos-的核心理念是专注一件事\"></a></h1>\n<p>经过我一段时间的摸索, 我得出一个结论: macOS 它核心的理念是希望你能完全 focus 一件事情. 他的窗口管理和虚拟桌面不是为了隔离场景, 而是为了你能专注在一件事情上.</p>\n<blockquote>\n<h4 id=\"为什么?\">为什么?<a title=\"#为什么?\" href=\"#为什么?\"></a></h4>\n<p>最有力的证据, 就是它全屏的逻辑是占领一个虚拟桌面. 这个设置强力到你没法靠改设置去关闭. 且默认的设置是将除了这个应用以外的所有信息都隐藏起来.</p>\n<p>可能有疑惑的点是: 很多时候一件事情不是一个应用就能完成的. 这个问题的答案有两个答案, 第一个是 mission control, 第二个是新功能 <strong>台前调度</strong> .</p>\n<p>至于为什么会跳转, 我想可能是它自己系统上设计的问题. 理论上其实都是完全隔离的, 跳转是因为我们是试图打开这个应用的第二个窗口, 并且希望这个窗口在自己希望的虚拟桌面上保存, 但对于 macOS 来说, 他们都是一个 app ,你要使用当然是跳回到它存在桌面上.</p>\n</blockquote>\n<h2 id=\"mission-control\">mission control<a title=\"#mission-control\" href=\"#mission-control\"></a></h2>\n<p>我对于mission control 的 <strong>最佳实践</strong> 是:</p>\n<ol>\n<li>每个虚拟桌面最多打开 3 个应用, 切换应用使用快捷键 command + `.</li>\n<li>多出来的应用新建虚拟桌面, 也是 3 个一组. (全屏也算)</li>\n<li>一般情况下不会超过 9 个, 总之控制在三个虚拟桌面(完成一件事情)</li>\n<li>遇到多窗口应用, 不要直接打开而是新建窗口.</li>\n</ol>\n<p>然后平时就是疯狂 command + ` 切换窗口, 需要换虚拟桌面都是先往上推, 左划右划然后选应用. 由于都是 3 个, 你很快就会发现在哪, 不用乱翻, 也不会出现 mission controll 窗口太多找不到的情况. 如果是单应用全屏, 则虚拟桌面的名字就是应用, 直接切过去就行了.</p>\n<p>这么做就够用了, 可以让你完全 focus 单个任务. 问题是这样当你同时做几个大任务的时候, 虚拟桌面会异常混乱(虚拟桌面会按使用频率排序的作用是在这, 这样可以让你把最常用的虚拟桌面靠在一起, 方便你切换).</p>\n<h2 id=\"台前调度\">台前调度<a title=\"#台前调度\" href=\"#台前调度\"></a></h2>\n<p>台前调度对我来说是更实用的功能.</p>\n<ol>\n<li>每个 stage 都控制在 3 个左右, 切换应用使用快捷键 command + `.</li>\n<li>不使用全屏, 只双击窗口放大.</li>\n<li>遇到多窗口应用, 不要直接打开而是新建窗口.</li>\n</ol>\n<p>一般不换虚拟桌面, 都是等你要换大任务的时候再换. 平时直接往左一探, 找到程序组即可. 大部分时候都是在疯狂 command + ` 即可. 因为只有三个程序, 切来切去都是这几个, 很高效. 换工作流的时候切一下 stage 即可.</p>\n<p>这个是最好用的, 可以避免虚拟桌面太多的问题. 一个桌面也代表了一个大任务, 很合理.</p>\n<p>然而还是有缺点的, 就是我还没找到可以快捷键切换 stage 的办法. 有快捷键才是最快的办法, 往左探还不是效率最高的.</p>\n<hr>\n<p>遗憾的是, 不管是哪个方法, 由于 macOS 的自身的设计, 多窗口应用都视为同一个 app , 我无法使用聚焦搜索直接打开我想用的应用, 会被莫名其妙的换到我不需要的桌面, 通常我都需要自己找到应用, 右键新建窗口才能正常使用. 希望以后的更新可以解决这个问题.</p>\n<blockquote>\n<h4 id=\"吐槽\">吐槽<a title=\"#吐槽\" href=\"#吐槽\"></a></h4>\n<p>我其实是怀抱这很高的期待来使用 macOS 的, 但实际上还是有很多意想不到的小毛病. 比如外界显示器的时候, 屏幕的分辨率改变之后双击窗口经常不是我预期中的放大, 而是不知道缩到哪里去……小毛病还是有不少的.</p>\n<p>不过我个人感觉 macOS 还是更适合工作, 设计理念偏向帮助你专注在一件事上, 并且各种生态服务让我不再需要拿起手机看消息. 很棒. 这点是 Windows 没法比的.</p>\n</blockquote>\n","date_formatted":{"ll":"Mar 28, 2023","L":"03/28/2023","MM-DD":"03-28"},"plink":"http://man-her.tech/2023/03/28/macOS的虚拟桌面和窗口管理/","type":"post","toc":[{"id":"macos-的核心理念是专注一件事","title":"macOS 的核心理念是专注一件事","index":"1","children":[{"id":"mission-control","title":"mission control","index":"1.1"},{"id":"台前调度","title":"台前调度","index":"1.2"}]}],"reading_time":"1510 words in 10 min"},{"title":"博客网站搭建总结","date":"2023-03-27T20:22:44.000Z","_content":"\n最近心态变化巨大, 总觉得作为程序员, 没有自己的作品, 实在是太 low 了. 然后我思考了一下, 可能一下子做个惊天地泣鬼神的作品比较困难, 但把博客持续运营起来应该比写大作品要轻松. \n\n不管怎么说, 持续的输出技术文章, 总结开发经验, 满足自己的输出欲其实是我一直以来都想做的事情, 碍于自己的时间管理实在做得太烂了, 总是工作不讨好, 自我提升又提升了个锤子.\n\n这个博客网站就是希望自己能够重回大学的状态, 每天坚持输出, 灌水也好, 认真写文章也好, 希望保持自我总结, 持续输出成习惯.\n\n可能文章每天都是灌水文, 但是这些事情还是慢慢做起来养成习惯, 总会到能坚持输出好文章的自己的. ~~麻痹自己, 感觉今天又完成了一件大事呢!~~\n\n> #### 题外话\n> \n> 现在 ChatGPT 真的是爆火, 这个玩意已经强到可以把一些低级码农给剃掉了, 以后开发可能只需要一两个水平比较高的程序员, 然后他们直接设计大框架, 其他的让 ai 写就完事了, 低端码农可以辞退了.\n> \n> 我最近在积极的学习如何和 ai 打交道, 这个时代早点和 ai 混熟, 跑起来就比别人快个不止 10 倍. 希望自己能利用好这个工具, 不被取代吧.\n\n## 我要支持 pwa\n\n然后为什么会有这篇文章呢? 这里是记录一下这个博客支持 pwa 的一些过程.\n\n> #### pwa 的简单介绍, 来源于 ChatGPT ~~意思是不保证正确性~~\n> \n> PWA（渐进式Web应用程序）是一种在移动设备和桌面设备上提供原生应用程序类似体验的Web应用程序技术。PWA技术允许开发人员使用Web技术（HTML、CSS和JavaScript）创建可离线使用、可安装和可推送通知的应用程序，同时兼具Web应用程序的可访问性和可链接性。\n> \n> 下面是PWA技术的一些主要特点：\n> \n>1. 渐进式增强：PWA应用程序可以渐进式增强，即逐步提供更多的功能和体验，与用户设备和网络环境的兼容性相适应。这意味着，PWA应用程序可以在不支持某些新功能或技术的旧设备上正常运行，并在新设备上提供更丰富的功能。\n>2. 离线支持：PWA应用程序可以使用Service Worker技术缓存Web资源，使得应用程序可以在离线情况下继续访问数据和功能，提高用户体验。\n>3. 安装和启动快速：PWA应用程序可以直接从Web应用程序安装，而无需下载和安装像原生应用程序一样的应用商店，这使得用户可以更快速和方便地安装应用程序。\n>4. 推送通知：PWA应用程序可以使用推送通知技术向用户发送消息，以便实时更新和提醒用户。\n>5. 可发现性和链接性：PWA应用程序可以像普通Web应用程序一样被搜索引擎检索和链接，增加应用程序的曝光度和流量。\n> \n> 总之，PWA技术的出现使得开发人员可以更好地利用Web技术创建类似原生应用程序的应用程序，并提供更好的用户体验，使得Web应用程序可以成为更有竞争力的应用程序解决方案。\n\n为什么要支持 pwa ?首先, 我下面列的原因都不是因为这么做更好的原因, 纯粹是个人的喜好问题. 认同就 ok ,不认同就作罢, 没关系.\n\n1. 我个人非常喜欢这项技术, 他不需要写客户端即可让用户有类似客户端的体验, 我自己也曾体验过很多 pwa 应用, 并且尝试将很多 web page 都使用 edge 或者 Safari 的发送到桌面做成 pwa 来使用. 奈何很多应用都没做成这个形式. 我希望自己的博客也能以 pwa 的形式上线, 不是为了实现什么功能, 单纯的就是喜欢这种形式. 如果我要持续优化这个博客, 那也说不定会在这上面做文章.\n2. 第一次尝试, 希望简单折腾下, 了解一点信息. 我之前做的网页应用都是非常传统的 web page 的模式, 从来没有试过做个可以 web app 这种形式. 所以想在 hexo 中尝试这实现一下 pwa .\n3. pwa 应用干净漂亮, 不会有多余的工具栏地址栏之类的出现.\n\n所以为什么要写这篇文章? 因为这里面虽然是快速搭建一个博客系统, 但是里面还是碰到了比较 **难解决** 的 bug .记录一下, 方便以后迁移时忘记这些小坑.\n\n> #### 难解决?\n>\n> 其实并不难, 主要是难在摸不着头脑, 我的解决方案也比较简单粗暴, 就是改 `node_modules` 的源码, 直接把 bug 改好了. \n>\n> 因为是直接改 `node_modules` 的, 如果我的博客发生迁移了, 这些个问题必定会困扰以后的我很久, 所以特地记录一下.\n\n---\n\n## PWA 的实现效果\n\n现在博客已经可以做到用 edge 安装到系统或者 Safari 发送到桌面作为一个应用使用了.\n\n![IMG_3B0257C1D73E-1](../media/博客网站搭建总结/IMG_3B0257C1D73E-1.jpeg)\n\n![IMG_7761297CE669-1](../media/博客网站搭建总结/IMG_7761297CE669-1.jpeg)\n\n上图是 iPad OS 的显示效果, iPhone 也是一样的.~~要的就是一个干净漂亮.~~. 这里感谢 `hexo-theme-inside` 的作者, 主题非常简介漂亮, 好看!\n\n---\n\n## 支持 PWA 碰到的一些坑\n\n首先选择 inside 的主题其中一个理由是他原生支持 pwa ,所以省点事直接用, 刚好主题也简洁大方.\n\n把主题安装好配置好之后, 就开始我的适配 pwa 之旅了.\n\n首先我参考的是这个人的文章:[Hexo添加PWA支持-阿里云开发者社区 (aliyun.com)](https://developer.aliyun.com/article/744051), 可以参考下, 然后实际上他就是把官方文档的做法抄了一遍. 或者可以直接看 hexo-pwa 的官方文档: [lavas-project/hexo-pwa: Hexo PWA plugin (github.com)](https://github.com/lavas-project/hexo-pwa).\n\n> #### 额外的收获\n>\n> 获得了一个图片转换网站 [iLoveIMG | The fastest free web app for easy image modification.](https://www.iloveimg.com/). 这是文章里推荐使用的, 我用起来还可以, 我的头像就是这么生成的.\n\n然后就会碰到第一个坑: 编译报错, 提示 `property data not defined` .\n\n这个坑是因为 pwa 插件没有及时更新, hexo 大框架已经更新了一次了, 里面有个字段没有了. 然后插件的作者一直不更新到 npm 上导致会编译错误.\n\n我懒得重新给他搞一个 npm 库了, issue 有个大佬已经 pr 了一次了, 就是没合并进去. 修改的内容具体在这个连接里面, 实际上就修改了一行代码: [Fix bug by simbafs · Pull Request #17 · lavas-project/hexo-pwa (github.com)](https://github.com/lavas-project/hexo-pwa/pull/17/commits/22dcfc76bc48181c070f39d8be83a5854e7bf5ec). 我直接改了 node_module 里的源码, 然后结束这个问题.\n\n第二个问题, 是资源引用的问题, 我一开始不知道静态资源是要全部放在 source 里面才会被编译进去. 我傻愣愣的写在根目录下, 这个不算个大问题.\n\n第三个问题是 Safari 浏览器不会读取网站的 icon 作为应用的图标问题. 这个还是通过改源码实现的. 上面的文章里面有写, 要改 layout 里面的模版文件实现. 在我这具体就是 `hexo-theme-inside/layout/index.njk` 里面, 把文章里的代码加进去.\n\n~~所以这边文章的意义就是记录我的解决方案, 避免忘记啊, 我 tm 是直接改的源码哦.~~","source":"_posts/博客网站搭建总结.md","raw":"---\ntitle: 博客网站搭建总结\ndate: 2023-03-27 20:22:44\ntags: [博客网站, 总结, 记录, 灌水]\n---\n\n最近心态变化巨大, 总觉得作为程序员, 没有自己的作品, 实在是太 low 了. 然后我思考了一下, 可能一下子做个惊天地泣鬼神的作品比较困难, 但把博客持续运营起来应该比写大作品要轻松. \n\n不管怎么说, 持续的输出技术文章, 总结开发经验, 满足自己的输出欲其实是我一直以来都想做的事情, 碍于自己的时间管理实在做得太烂了, 总是工作不讨好, 自我提升又提升了个锤子.\n\n这个博客网站就是希望自己能够重回大学的状态, 每天坚持输出, 灌水也好, 认真写文章也好, 希望保持自我总结, 持续输出成习惯.\n\n可能文章每天都是灌水文, 但是这些事情还是慢慢做起来养成习惯, 总会到能坚持输出好文章的自己的. ~~麻痹自己, 感觉今天又完成了一件大事呢!~~\n\n> #### 题外话\n> \n> 现在 ChatGPT 真的是爆火, 这个玩意已经强到可以把一些低级码农给剃掉了, 以后开发可能只需要一两个水平比较高的程序员, 然后他们直接设计大框架, 其他的让 ai 写就完事了, 低端码农可以辞退了.\n> \n> 我最近在积极的学习如何和 ai 打交道, 这个时代早点和 ai 混熟, 跑起来就比别人快个不止 10 倍. 希望自己能利用好这个工具, 不被取代吧.\n\n## 我要支持 pwa\n\n然后为什么会有这篇文章呢? 这里是记录一下这个博客支持 pwa 的一些过程.\n\n> #### pwa 的简单介绍, 来源于 ChatGPT ~~意思是不保证正确性~~\n> \n> PWA（渐进式Web应用程序）是一种在移动设备和桌面设备上提供原生应用程序类似体验的Web应用程序技术。PWA技术允许开发人员使用Web技术（HTML、CSS和JavaScript）创建可离线使用、可安装和可推送通知的应用程序，同时兼具Web应用程序的可访问性和可链接性。\n> \n> 下面是PWA技术的一些主要特点：\n> \n>1. 渐进式增强：PWA应用程序可以渐进式增强，即逐步提供更多的功能和体验，与用户设备和网络环境的兼容性相适应。这意味着，PWA应用程序可以在不支持某些新功能或技术的旧设备上正常运行，并在新设备上提供更丰富的功能。\n>2. 离线支持：PWA应用程序可以使用Service Worker技术缓存Web资源，使得应用程序可以在离线情况下继续访问数据和功能，提高用户体验。\n>3. 安装和启动快速：PWA应用程序可以直接从Web应用程序安装，而无需下载和安装像原生应用程序一样的应用商店，这使得用户可以更快速和方便地安装应用程序。\n>4. 推送通知：PWA应用程序可以使用推送通知技术向用户发送消息，以便实时更新和提醒用户。\n>5. 可发现性和链接性：PWA应用程序可以像普通Web应用程序一样被搜索引擎检索和链接，增加应用程序的曝光度和流量。\n> \n> 总之，PWA技术的出现使得开发人员可以更好地利用Web技术创建类似原生应用程序的应用程序，并提供更好的用户体验，使得Web应用程序可以成为更有竞争力的应用程序解决方案。\n\n为什么要支持 pwa ?首先, 我下面列的原因都不是因为这么做更好的原因, 纯粹是个人的喜好问题. 认同就 ok ,不认同就作罢, 没关系.\n\n1. 我个人非常喜欢这项技术, 他不需要写客户端即可让用户有类似客户端的体验, 我自己也曾体验过很多 pwa 应用, 并且尝试将很多 web page 都使用 edge 或者 Safari 的发送到桌面做成 pwa 来使用. 奈何很多应用都没做成这个形式. 我希望自己的博客也能以 pwa 的形式上线, 不是为了实现什么功能, 单纯的就是喜欢这种形式. 如果我要持续优化这个博客, 那也说不定会在这上面做文章.\n2. 第一次尝试, 希望简单折腾下, 了解一点信息. 我之前做的网页应用都是非常传统的 web page 的模式, 从来没有试过做个可以 web app 这种形式. 所以想在 hexo 中尝试这实现一下 pwa .\n3. pwa 应用干净漂亮, 不会有多余的工具栏地址栏之类的出现.\n\n所以为什么要写这篇文章? 因为这里面虽然是快速搭建一个博客系统, 但是里面还是碰到了比较 **难解决** 的 bug .记录一下, 方便以后迁移时忘记这些小坑.\n\n> #### 难解决?\n>\n> 其实并不难, 主要是难在摸不着头脑, 我的解决方案也比较简单粗暴, 就是改 `node_modules` 的源码, 直接把 bug 改好了. \n>\n> 因为是直接改 `node_modules` 的, 如果我的博客发生迁移了, 这些个问题必定会困扰以后的我很久, 所以特地记录一下.\n\n---\n\n## PWA 的实现效果\n\n现在博客已经可以做到用 edge 安装到系统或者 Safari 发送到桌面作为一个应用使用了.\n\n![IMG_3B0257C1D73E-1](../media/博客网站搭建总结/IMG_3B0257C1D73E-1.jpeg)\n\n![IMG_7761297CE669-1](../media/博客网站搭建总结/IMG_7761297CE669-1.jpeg)\n\n上图是 iPad OS 的显示效果, iPhone 也是一样的.~~要的就是一个干净漂亮.~~. 这里感谢 `hexo-theme-inside` 的作者, 主题非常简介漂亮, 好看!\n\n---\n\n## 支持 PWA 碰到的一些坑\n\n首先选择 inside 的主题其中一个理由是他原生支持 pwa ,所以省点事直接用, 刚好主题也简洁大方.\n\n把主题安装好配置好之后, 就开始我的适配 pwa 之旅了.\n\n首先我参考的是这个人的文章:[Hexo添加PWA支持-阿里云开发者社区 (aliyun.com)](https://developer.aliyun.com/article/744051), 可以参考下, 然后实际上他就是把官方文档的做法抄了一遍. 或者可以直接看 hexo-pwa 的官方文档: [lavas-project/hexo-pwa: Hexo PWA plugin (github.com)](https://github.com/lavas-project/hexo-pwa).\n\n> #### 额外的收获\n>\n> 获得了一个图片转换网站 [iLoveIMG | The fastest free web app for easy image modification.](https://www.iloveimg.com/). 这是文章里推荐使用的, 我用起来还可以, 我的头像就是这么生成的.\n\n然后就会碰到第一个坑: 编译报错, 提示 `property data not defined` .\n\n这个坑是因为 pwa 插件没有及时更新, hexo 大框架已经更新了一次了, 里面有个字段没有了. 然后插件的作者一直不更新到 npm 上导致会编译错误.\n\n我懒得重新给他搞一个 npm 库了, issue 有个大佬已经 pr 了一次了, 就是没合并进去. 修改的内容具体在这个连接里面, 实际上就修改了一行代码: [Fix bug by simbafs · Pull Request #17 · lavas-project/hexo-pwa (github.com)](https://github.com/lavas-project/hexo-pwa/pull/17/commits/22dcfc76bc48181c070f39d8be83a5854e7bf5ec). 我直接改了 node_module 里的源码, 然后结束这个问题.\n\n第二个问题, 是资源引用的问题, 我一开始不知道静态资源是要全部放在 source 里面才会被编译进去. 我傻愣愣的写在根目录下, 这个不算个大问题.\n\n第三个问题是 Safari 浏览器不会读取网站的 icon 作为应用的图标问题. 这个还是通过改源码实现的. 上面的文章里面有写, 要改 layout 里面的模版文件实现. 在我这具体就是 `hexo-theme-inside/layout/index.njk` 里面, 把文章里的代码加进去.\n\n~~所以这边文章的意义就是记录我的解决方案, 避免忘记啊, 我 tm 是直接改的源码哦.~~","slug":"博客网站搭建总结","published":1,"updated":"2023-04-08T15:34:03.431Z","comments":0,"layout":"post","photos":[],"link":"2023/03/27/博客网站搭建总结","_id":"clg8508fm000n6yuz43dv2kuz","content":"<p>最近心态变化巨大, 总觉得作为程序员, 没有自己的作品, 实在是太 low 了. 然后我思考了一下, 可能一下子做个惊天地泣鬼神的作品比较困难, 但把博客持续运营起来应该比写大作品要轻松.</p>\n<p>不管怎么说, 持续的输出技术文章, 总结开发经验, 满足自己的输出欲其实是我一直以来都想做的事情, 碍于自己的时间管理实在做得太烂了, 总是工作不讨好, 自我提升又提升了个锤子.</p>\n<p>这个博客网站就是希望自己能够重回大学的状态, 每天坚持输出, 灌水也好, 认真写文章也好, 希望保持自我总结, 持续输出成习惯.</p>\n<p>可能文章每天都是灌水文, 但是这些事情还是慢慢做起来养成习惯, 总会到能坚持输出好文章的自己的. <s>麻痹自己, 感觉今天又完成了一件大事呢!</s></p>\n<blockquote>\n<h4 id=\"题外话\">题外话<a title=\"#题外话\" href=\"#题外话\"></a></h4>\n<p>现在 ChatGPT 真的是爆火, 这个玩意已经强到可以把一些低级码农给剃掉了, 以后开发可能只需要一两个水平比较高的程序员, 然后他们直接设计大框架, 其他的让 ai 写就完事了, 低端码农可以辞退了.</p>\n<p>我最近在积极的学习如何和 ai 打交道, 这个时代早点和 ai 混熟, 跑起来就比别人快个不止 10 倍. 希望自己能利用好这个工具, 不被取代吧.</p>\n</blockquote>\n<h2 id=\"我要支持-pwa\">我要支持 pwa<a title=\"#我要支持-pwa\" href=\"#我要支持-pwa\"></a></h2>\n<p>然后为什么会有这篇文章呢? 这里是记录一下这个博客支持 pwa 的一些过程.</p>\n<blockquote>\n<h4 id=\"pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\">pwa 的简单介绍, 来源于 ChatGPT <s>意思是不保证正确性</s><a title=\"#pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\" href=\"#pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\"></a></h4>\n<p>PWA（渐进式Web应用程序）是一种在移动设备和桌面设备上提供原生应用程序类似体验的Web应用程序技术。PWA技术允许开发人员使用Web技术（HTML、CSS和JavaScript）创建可离线使用、可安装和可推送通知的应用程序，同时兼具Web应用程序的可访问性和可链接性。</p>\n<p>下面是PWA技术的一些主要特点：</p>\n<ol>\n<li>渐进式增强：PWA应用程序可以渐进式增强，即逐步提供更多的功能和体验，与用户设备和网络环境的兼容性相适应。这意味着，PWA应用程序可以在不支持某些新功能或技术的旧设备上正常运行，并在新设备上提供更丰富的功能。</li>\n<li>离线支持：PWA应用程序可以使用Service Worker技术缓存Web资源，使得应用程序可以在离线情况下继续访问数据和功能，提高用户体验。</li>\n<li>安装和启动快速：PWA应用程序可以直接从Web应用程序安装，而无需下载和安装像原生应用程序一样的应用商店，这使得用户可以更快速和方便地安装应用程序。</li>\n<li>推送通知：PWA应用程序可以使用推送通知技术向用户发送消息，以便实时更新和提醒用户。</li>\n<li>可发现性和链接性：PWA应用程序可以像普通Web应用程序一样被搜索引擎检索和链接，增加应用程序的曝光度和流量。</li>\n</ol>\n<p>总之，PWA技术的出现使得开发人员可以更好地利用Web技术创建类似原生应用程序的应用程序，并提供更好的用户体验，使得Web应用程序可以成为更有竞争力的应用程序解决方案。</p>\n</blockquote>\n<p>为什么要支持 pwa ?首先, 我下面列的原因都不是因为这么做更好的原因, 纯粹是个人的喜好问题. 认同就 ok ,不认同就作罢, 没关系.</p>\n<ol>\n<li>我个人非常喜欢这项技术, 他不需要写客户端即可让用户有类似客户端的体验, 我自己也曾体验过很多 pwa 应用, 并且尝试将很多 web page 都使用 edge 或者 Safari 的发送到桌面做成 pwa 来使用. 奈何很多应用都没做成这个形式. 我希望自己的博客也能以 pwa 的形式上线, 不是为了实现什么功能, 单纯的就是喜欢这种形式. 如果我要持续优化这个博客, 那也说不定会在这上面做文章.</li>\n<li>第一次尝试, 希望简单折腾下, 了解一点信息. 我之前做的网页应用都是非常传统的 web page 的模式, 从来没有试过做个可以 web app 这种形式. 所以想在 hexo 中尝试这实现一下 pwa .</li>\n<li>pwa 应用干净漂亮, 不会有多余的工具栏地址栏之类的出现.</li>\n</ol>\n<p>所以为什么要写这篇文章? 因为这里面虽然是快速搭建一个博客系统, 但是里面还是碰到了比较 <strong>难解决</strong> 的 bug .记录一下, 方便以后迁移时忘记这些小坑.</p>\n<blockquote>\n<h4 id=\"难解决?\">难解决?<a title=\"#难解决?\" href=\"#难解决?\"></a></h4>\n<p>其实并不难, 主要是难在摸不着头脑, 我的解决方案也比较简单粗暴, 就是改 <code>node_modules</code> 的源码, 直接把 bug 改好了.</p>\n<p>因为是直接改 <code>node_modules</code> 的, 如果我的博客发生迁移了, 这些个问题必定会困扰以后的我很久, 所以特地记录一下.</p>\n</blockquote>\n<hr>\n<h2 id=\"pwa-的实现效果\">PWA 的实现效果<a title=\"#pwa-的实现效果\" href=\"#pwa-的实现效果\"></a></h2>\n<p>现在博客已经可以做到用 edge 安装到系统或者 Safari 发送到桌面作为一个应用使用了.</p>\n<p><img src=\"../media/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/IMG_3B0257C1D73E-1.jpeg\" alt=\"IMG_3B0257C1D73E-1\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"../media/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/IMG_7761297CE669-1.jpeg\" alt=\"IMG_7761297CE669-1\" loading=\"lazy\" class=\"φbp\"></p>\n<p>上图是 iPad OS 的显示效果, iPhone 也是一样的.<s>要的就是一个干净漂亮.</s>. 这里感谢 <code>hexo-theme-inside</code> 的作者, 主题非常简介漂亮, 好看!</p>\n<hr>\n<h2 id=\"支持-pwa-碰到的一些坑\">支持 PWA 碰到的一些坑<a title=\"#支持-pwa-碰到的一些坑\" href=\"#支持-pwa-碰到的一些坑\"></a></h2>\n<p>首先选择 inside 的主题其中一个理由是他原生支持 pwa ,所以省点事直接用, 刚好主题也简洁大方.</p>\n<p>把主题安装好配置好之后, 就开始我的适配 pwa 之旅了.</p>\n<p>首先我参考的是这个人的文章:<a href=\"https://developer.aliyun.com/article/744051\" target=\"_blank\">Hexo添加PWA支持-阿里云开发者社区 (aliyun.com)</a>, 可以参考下, 然后实际上他就是把官方文档的做法抄了一遍. 或者可以直接看 hexo-pwa 的官方文档: <a href=\"https://github.com/lavas-project/hexo-pwa\" target=\"_blank\">lavas-project/hexo-pwa: Hexo PWA plugin (github.com)</a>.</p>\n<blockquote>\n<h4 id=\"额外的收获\">额外的收获<a title=\"#额外的收获\" href=\"#额外的收获\"></a></h4>\n<p>获得了一个图片转换网站 <a href=\"https://www.iloveimg.com/\" target=\"_blank\">iLoveIMG | The fastest free web app for easy image modification.</a>. 这是文章里推荐使用的, 我用起来还可以, 我的头像就是这么生成的.</p>\n</blockquote>\n<p>然后就会碰到第一个坑: 编译报错, 提示 <code>property data not defined</code> .</p>\n<p>这个坑是因为 pwa 插件没有及时更新, hexo 大框架已经更新了一次了, 里面有个字段没有了. 然后插件的作者一直不更新到 npm 上导致会编译错误.</p>\n<p>我懒得重新给他搞一个 npm 库了, issue 有个大佬已经 pr 了一次了, 就是没合并进去. 修改的内容具体在这个连接里面, 实际上就修改了一行代码: <a href=\"https://github.com/lavas-project/hexo-pwa/pull/17/commits/22dcfc76bc48181c070f39d8be83a5854e7bf5ec\" target=\"_blank\">Fix bug by simbafs · Pull Request #17 · lavas-project/hexo-pwa (github.com)</a>. 我直接改了 node_module 里的源码, 然后结束这个问题.</p>\n<p>第二个问题, 是资源引用的问题, 我一开始不知道静态资源是要全部放在 source 里面才会被编译进去. 我傻愣愣的写在根目录下, 这个不算个大问题.</p>\n<p>第三个问题是 Safari 浏览器不会读取网站的 icon 作为应用的图标问题. 这个还是通过改源码实现的. 上面的文章里面有写, 要改 layout 里面的模版文件实现. 在我这具体就是 <code>hexo-theme-inside/layout/index.njk</code> 里面, 把文章里的代码加进去.</p>\n<p><s>所以这边文章的意义就是记录我的解决方案, 避免忘记啊, 我 tm 是直接改的源码哦.</s></p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近心态变化巨大, 总觉得作为程序员, 没有自己的作品, 实在是太 low 了. 然后我思考了一下, 可能一下子做个惊天地泣鬼神的作品比较困难, 但把博客持续运营起来应该比写大作品要轻松.</p>\n<p>不管怎么说, 持续的输出技术文章, 总结开发经验, 满足自己的输出欲其实是我一直以来都想做的事情, 碍于自己的时间管理实在做得太烂了, 总是工作不讨好, 自我提升又提升了个锤子.</p>\n<p>这个博客网站就是希望自己能够重回大学的状态, 每天坚持输出, 灌水也好, 认真写文章也好, 希望保持自我总结, 持续输出成习惯.</p>\n<p>可能文章每天都是灌水文, 但是这些事情还是慢慢做起来养成习惯, 总会到能坚持输出好文章的自己的. <s>麻痹自己, 感觉今天又完成了一件大事呢!</s></p>\n<blockquote>\n<h4 id=\"题外话\">题外话<a title=\"#题外话\" href=\"#题外话\"></a></h4>\n<p>现在 ChatGPT 真的是爆火, 这个玩意已经强到可以把一些低级码农给剃掉了, 以后开发可能只需要一两个水平比较高的程序员, 然后他们直接设计大框架, 其他的让 ai 写就完事了, 低端码农可以辞退了.</p>\n<p>我最近在积极的学习如何和 ai 打交道, 这个时代早点和 ai 混熟, 跑起来就比别人快个不止 10 倍. 希望自己能利用好这个工具, 不被取代吧.</p>\n</blockquote>\n<h2 id=\"我要支持-pwa\">我要支持 pwa<a title=\"#我要支持-pwa\" href=\"#我要支持-pwa\"></a></h2>\n<p>然后为什么会有这篇文章呢? 这里是记录一下这个博客支持 pwa 的一些过程.</p>\n<blockquote>\n<h4 id=\"pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\">pwa 的简单介绍, 来源于 ChatGPT <s>意思是不保证正确性</s><a title=\"#pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\" href=\"#pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\"></a></h4>\n<p>PWA（渐进式Web应用程序）是一种在移动设备和桌面设备上提供原生应用程序类似体验的Web应用程序技术。PWA技术允许开发人员使用Web技术（HTML、CSS和JavaScript）创建可离线使用、可安装和可推送通知的应用程序，同时兼具Web应用程序的可访问性和可链接性。</p>\n<p>下面是PWA技术的一些主要特点：</p>\n<ol>\n<li>渐进式增强：PWA应用程序可以渐进式增强，即逐步提供更多的功能和体验，与用户设备和网络环境的兼容性相适应。这意味着，PWA应用程序可以在不支持某些新功能或技术的旧设备上正常运行，并在新设备上提供更丰富的功能。</li>\n<li>离线支持：PWA应用程序可以使用Service Worker技术缓存Web资源，使得应用程序可以在离线情况下继续访问数据和功能，提高用户体验。</li>\n<li>安装和启动快速：PWA应用程序可以直接从Web应用程序安装，而无需下载和安装像原生应用程序一样的应用商店，这使得用户可以更快速和方便地安装应用程序。</li>\n<li>推送通知：PWA应用程序可以使用推送通知技术向用户发送消息，以便实时更新和提醒用户。</li>\n<li>可发现性和链接性：PWA应用程序可以像普通Web应用程序一样被搜索引擎检索和链接，增加应用程序的曝光度和流量。</li>\n</ol>\n<p>总之，PWA技术的出现使得开发人员可以更好地利用Web技术创建类似原生应用程序的应用程序，并提供更好的用户体验，使得Web应用程序可以成为更有竞争力的应用程序解决方案。</p>\n</blockquote>\n<p>为什么要支持 pwa ?首先, 我下面列的原因都不是因为这么做更好的原因, 纯粹是个人的喜好问题. 认同就 ok ,不认同就作罢, 没关系.</p>\n<ol>\n<li>我个人非常喜欢这项技术, 他不需要写客户端即可让用户有类似客户端的体验, 我自己也曾体验过很多 pwa 应用, 并且尝试将很多 web page 都使用 edge 或者 Safari 的发送到桌面做成 pwa 来使用. 奈何很多应用都没做成这个形式. 我希望自己的博客也能以 pwa 的形式上线, 不是为了实现什么功能, 单纯的就是喜欢这种形式. 如果我要持续优化这个博客, 那也说不定会在这上面做文章.</li>\n<li>第一次尝试, 希望简单折腾下, 了解一点信息. 我之前做的网页应用都是非常传统的 web page 的模式, 从来没有试过做个可以 web app 这种形式. 所以想在 hexo 中尝试这实现一下 pwa .</li>\n<li>pwa 应用干净漂亮, 不会有多余的工具栏地址栏之类的出现.</li>\n</ol>\n<p>所以为什么要写这篇文章? 因为这里面虽然是快速搭建一个博客系统, 但是里面还是碰到了比较 <strong>难解决</strong> 的 bug .记录一下, 方便以后迁移时忘记这些小坑.</p>\n<blockquote>\n<h4 id=\"难解决?\">难解决?<a title=\"#难解决?\" href=\"#难解决?\"></a></h4>\n<p>其实并不难, 主要是难在摸不着头脑, 我的解决方案也比较简单粗暴, 就是改 <code>node_modules</code> 的源码, 直接把 bug 改好了.</p>\n<p>因为是直接改 <code>node_modules</code> 的, 如果我的博客发生迁移了, 这些个问题必定会困扰以后的我很久, 所以特地记录一下.</p>\n</blockquote>\n<hr>\n<h2 id=\"pwa-的实现效果\">PWA 的实现效果<a title=\"#pwa-的实现效果\" href=\"#pwa-的实现效果\"></a></h2>\n<p>现在博客已经可以做到用 edge 安装到系统或者 Safari 发送到桌面作为一个应用使用了.</p>\n<p><img src=\"../media/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/IMG_3B0257C1D73E-1.jpeg\" alt=\"IMG_3B0257C1D73E-1\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"../media/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/IMG_7761297CE669-1.jpeg\" alt=\"IMG_7761297CE669-1\" loading=\"lazy\" class=\"φbp\"></p>\n<p>上图是 iPad OS 的显示效果, iPhone 也是一样的.<s>要的就是一个干净漂亮.</s>. 这里感谢 <code>hexo-theme-inside</code> 的作者, 主题非常简介漂亮, 好看!</p>\n<hr>\n<h2 id=\"支持-pwa-碰到的一些坑\">支持 PWA 碰到的一些坑<a title=\"#支持-pwa-碰到的一些坑\" href=\"#支持-pwa-碰到的一些坑\"></a></h2>\n<p>首先选择 inside 的主题其中一个理由是他原生支持 pwa ,所以省点事直接用, 刚好主题也简洁大方.</p>\n<p>把主题安装好配置好之后, 就开始我的适配 pwa 之旅了.</p>\n<p>首先我参考的是这个人的文章:<a href=\"https://developer.aliyun.com/article/744051\" target=\"_blank\">Hexo添加PWA支持-阿里云开发者社区 (aliyun.com)</a>, 可以参考下, 然后实际上他就是把官方文档的做法抄了一遍. 或者可以直接看 hexo-pwa 的官方文档: <a href=\"https://github.com/lavas-project/hexo-pwa\" target=\"_blank\">lavas-project/hexo-pwa: Hexo PWA plugin (github.com)</a>.</p>\n<blockquote>\n<h4 id=\"额外的收获\">额外的收获<a title=\"#额外的收获\" href=\"#额外的收获\"></a></h4>\n<p>获得了一个图片转换网站 <a href=\"https://www.iloveimg.com/\" target=\"_blank\">iLoveIMG | The fastest free web app for easy image modification.</a>. 这是文章里推荐使用的, 我用起来还可以, 我的头像就是这么生成的.</p>\n</blockquote>\n<p>然后就会碰到第一个坑: 编译报错, 提示 <code>property data not defined</code> .</p>\n<p>这个坑是因为 pwa 插件没有及时更新, hexo 大框架已经更新了一次了, 里面有个字段没有了. 然后插件的作者一直不更新到 npm 上导致会编译错误.</p>\n<p>我懒得重新给他搞一个 npm 库了, issue 有个大佬已经 pr 了一次了, 就是没合并进去. 修改的内容具体在这个连接里面, 实际上就修改了一行代码: <a href=\"https://github.com/lavas-project/hexo-pwa/pull/17/commits/22dcfc76bc48181c070f39d8be83a5854e7bf5ec\" target=\"_blank\">Fix bug by simbafs · Pull Request #17 · lavas-project/hexo-pwa (github.com)</a>. 我直接改了 node_module 里的源码, 然后结束这个问题.</p>\n<p>第二个问题, 是资源引用的问题, 我一开始不知道静态资源是要全部放在 source 里面才会被编译进去. 我傻愣愣的写在根目录下, 这个不算个大问题.</p>\n<p>第三个问题是 Safari 浏览器不会读取网站的 icon 作为应用的图标问题. 这个还是通过改源码实现的. 上面的文章里面有写, 要改 layout 里面的模版文件实现. 在我这具体就是 <code>hexo-theme-inside/layout/index.njk</code> 里面, 把文章里的代码加进去.</p>\n<p><s>所以这边文章的意义就是记录我的解决方案, 避免忘记啊, 我 tm 是直接改的源码哦.</s></p>\n","date_formatted":{"ll":"Mar 27, 2023","L":"03/27/2023","MM-DD":"03-27"},"plink":"http://man-her.tech/2023/03/27/博客网站搭建总结/","type":"post","toc":[{"id":"我要支持-pwa","title":"我要支持 pwa","index":"1"},{"id":"pwa-的实现效果","title":"PWA 的实现效果","index":"2"},{"id":"支持-pwa-碰到的一些坑","title":"支持 PWA 碰到的一些坑","index":"3"}],"reading_time":"2087 words in 14 min"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clg8508f900006yuzevilhm2h","tag_id":"clg8508fe00026yuzd3aebjd4","_id":"clg8508fg00076yuz27e0e2oj"},{"post_id":"clg8508fg00056yuz87gr8js6","tag_id":"clg8508fe00026yuzd3aebjd4","_id":"clg8508fh00096yuz2mey78n4"},{"post_id":"clg8508fd00016yuz1c7fapid","tag_id":"clg8508fg00066yuzbc9ravc7","_id":"clg8508fi000d6yuzhipk7lcp"},{"post_id":"clg8508fd00016yuz1c7fapid","tag_id":"clg8508fh000a6yuz8cz1hr47","_id":"clg8508fi000e6yuz2fj7fxv3"},{"post_id":"clg8508fd00016yuz1c7fapid","tag_id":"clg8508fh000b6yuzh72y4c5z","_id":"clg8508fi000g6yuz9uj1h8pk"},{"post_id":"clg8508ff00036yuza9yb1oxh","tag_id":"clg8508fe00026yuzd3aebjd4","_id":"clg8508fi000h6yuz4cy3ddl8"},{"post_id":"clg8508ff00046yuzgnf0enal","tag_id":"clg8508fg00066yuzbc9ravc7","_id":"clg8508fj000k6yuz9ezl3425"},{"post_id":"clg8508ff00046yuzgnf0enal","tag_id":"clg8508fh000a6yuz8cz1hr47","_id":"clg8508fj000l6yuz9wdy4fey"},{"post_id":"clg8508ff00046yuzgnf0enal","tag_id":"clg8508fh000b6yuzh72y4c5z","_id":"clg8508fj000m6yuzdxoj8pp3"},{"post_id":"clg8508fm000n6yuz43dv2kuz","tag_id":"clg8508fg00066yuzbc9ravc7","_id":"clg8508fn000r6yuz7ddv8htg"},{"post_id":"clg8508fm000n6yuz43dv2kuz","tag_id":"clg8508fn000o6yuz05f3fkfz","_id":"clg8508fn000s6yuze0zycsd6"},{"post_id":"clg8508fm000n6yuz43dv2kuz","tag_id":"clg8508fn000p6yuzfqmvc7ao","_id":"clg8508fn000t6yuza4ds94ge"},{"post_id":"clg8508fm000n6yuz43dv2kuz","tag_id":"clg8508fn000q6yuz5a304xi3","_id":"clg8508fn000u6yuzh5cmac4c"}],"Tag":[{"name":"测试","_id":"clg8508fe00026yuzd3aebjd4"},{"name":"博客网站","_id":"clg8508fg00066yuzbc9ravc7"},{"name":"bash","_id":"clg8508fh000a6yuz8cz1hr47"},{"name":"chatgpt","_id":"clg8508fh000b6yuzh72y4c5z"},{"name":"总结","_id":"clg8508fn000o6yuz05f3fkfz"},{"name":"记录","_id":"clg8508fn000p6yuzfqmvc7ao"},{"name":"灌水","_id":"clg8508fn000q6yuz5a304xi3"}]}}