{"title":"博客网站搭建总结","date":"2023-03-27T20:22:44.000Z","date_formatted":{"ll":"Mar 27, 2023","L":"03/27/2023","MM-DD":"03-27"},"link":"2023/03/27/博客网站搭建总结","tags":["博客网站","总结","灌水","记录"],"updated":"2023-04-08T19:49:52.148Z","content":"<p>最近心态变化巨大, 总觉得作为程序员, 没有自己的作品, 实在是太 low 了. 然后我思考了一下, 可能一下子做个惊天地泣鬼神的作品比较困难, 但把博客持续运营起来应该比写大作品要轻松.</p>\n<p>不管怎么说, 持续的输出技术文章, 总结开发经验, 满足自己的输出欲其实是我一直以来都想做的事情, 碍于自己的时间管理实在做得太烂了, 总是工作不讨好, 自我提升又提升了个锤子.</p>\n<p>这个博客网站就是希望自己能够重回大学的状态, 每天坚持输出, 灌水也好, 认真写文章也好, 希望保持自我总结, 持续输出成习惯.</p>\n<p>可能文章每天都是灌水文, 但是这些事情还是慢慢做起来养成习惯, 总会到能坚持输出好文章的自己的. <s>麻痹自己, 感觉今天又完成了一件大事呢!</s></p>\n<blockquote>\n<h4 id=\"题外话\">题外话<a title=\"#题外话\" href=\"#题外话\"></a></h4>\n<p>现在 ChatGPT 真的是爆火, 这个玩意已经强到可以把一些低级码农给剃掉了, 以后开发可能只需要一两个水平比较高的程序员, 然后他们直接设计大框架, 其他的让 ai 写就完事了, 低端码农可以辞退了.</p>\n<p>我最近在积极的学习如何和 ai 打交道, 这个时代早点和 ai 混熟, 跑起来就比别人快个不止 10 倍. 希望自己能利用好这个工具, 不被取代吧.</p>\n</blockquote>\n<h2 id=\"我要支持-pwa\">我要支持 pwa<a title=\"#我要支持-pwa\" href=\"#我要支持-pwa\"></a></h2>\n<p>然后为什么会有这篇文章呢? 这里是记录一下这个博客支持 pwa 的一些过程.</p>\n<blockquote>\n<h4 id=\"pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\">pwa 的简单介绍, 来源于 ChatGPT <s>意思是不保证正确性</s><a title=\"#pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\" href=\"#pwa-的简单介绍,-来源于-chatgpt-意思是不保证正确性\"></a></h4>\n<p>PWA（渐进式Web应用程序）是一种在移动设备和桌面设备上提供原生应用程序类似体验的Web应用程序技术。PWA技术允许开发人员使用Web技术（HTML、CSS和JavaScript）创建可离线使用、可安装和可推送通知的应用程序，同时兼具Web应用程序的可访问性和可链接性。</p>\n<p>下面是PWA技术的一些主要特点：</p>\n<ol>\n<li>渐进式增强：PWA应用程序可以渐进式增强，即逐步提供更多的功能和体验，与用户设备和网络环境的兼容性相适应。这意味着，PWA应用程序可以在不支持某些新功能或技术的旧设备上正常运行，并在新设备上提供更丰富的功能。</li>\n<li>离线支持：PWA应用程序可以使用Service Worker技术缓存Web资源，使得应用程序可以在离线情况下继续访问数据和功能，提高用户体验。</li>\n<li>安装和启动快速：PWA应用程序可以直接从Web应用程序安装，而无需下载和安装像原生应用程序一样的应用商店，这使得用户可以更快速和方便地安装应用程序。</li>\n<li>推送通知：PWA应用程序可以使用推送通知技术向用户发送消息，以便实时更新和提醒用户。</li>\n<li>可发现性和链接性：PWA应用程序可以像普通Web应用程序一样被搜索引擎检索和链接，增加应用程序的曝光度和流量。</li>\n</ol>\n<p>总之，PWA技术的出现使得开发人员可以更好地利用Web技术创建类似原生应用程序的应用程序，并提供更好的用户体验，使得Web应用程序可以成为更有竞争力的应用程序解决方案。</p>\n</blockquote>\n<p>为什么要支持 pwa ?首先, 我下面列的原因都不是因为这么做更好的原因, 纯粹是个人的喜好问题. 认同就 ok ,不认同就作罢, 没关系.</p>\n<ol>\n<li>我个人非常喜欢这项技术, 他不需要写客户端即可让用户有类似客户端的体验, 我自己也曾体验过很多 pwa 应用, 并且尝试将很多 web page 都使用 edge 或者 Safari 的发送到桌面做成 pwa 来使用. 奈何很多应用都没做成这个形式. 我希望自己的博客也能以 pwa 的形式上线, 不是为了实现什么功能, 单纯的就是喜欢这种形式. 如果我要持续优化这个博客, 那也说不定会在这上面做文章.</li>\n<li>第一次尝试, 希望简单折腾下, 了解一点信息. 我之前做的网页应用都是非常传统的 web page 的模式, 从来没有试过做个可以 web app 这种形式. 所以想在 hexo 中尝试这实现一下 pwa .</li>\n<li>pwa 应用干净漂亮, 不会有多余的工具栏地址栏之类的出现.</li>\n</ol>\n<p>所以为什么要写这篇文章? 因为这里面虽然是快速搭建一个博客系统, 但是里面还是碰到了比较 <strong>难解决</strong> 的 bug .记录一下, 方便以后迁移时忘记这些小坑.</p>\n<blockquote>\n<h4 id=\"难解决?\">难解决?<a title=\"#难解决?\" href=\"#难解决?\"></a></h4>\n<p>其实并不难, 主要是难在摸不着头脑, 我的解决方案也比较简单粗暴, 就是改 <code>node_modules</code> 的源码, 直接把 bug 改好了.</p>\n<p>因为是直接改 <code>node_modules</code> 的, 如果我的博客发生迁移了, 这些个问题必定会困扰以后的我很久, 所以特地记录一下.</p>\n</blockquote>\n<hr>\n<h2 id=\"pwa-的实现效果\">PWA 的实现效果<a title=\"#pwa-的实现效果\" href=\"#pwa-的实现效果\"></a></h2>\n<p>现在博客已经可以做到用 edge 安装到系统或者 Safari 发送到桌面作为一个应用使用了.</p>\n<p><img src=\"../media/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/IMG_3B0257C1D73E-1.jpeg\" alt=\"IMG_3B0257C1D73E-1\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"../media/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/IMG_7761297CE669-1.jpeg\" alt=\"IMG_7761297CE669-1\" loading=\"lazy\" class=\"φbp\"></p>\n<p>上图是 iPad OS 的显示效果, iPhone 也是一样的.<s>要的就是一个干净漂亮.</s>. 这里感谢 <code>hexo-theme-inside</code> 的作者, 主题非常简介漂亮, 好看!</p>\n<hr>\n<h2 id=\"支持-pwa-碰到的一些坑\">支持 PWA 碰到的一些坑<a title=\"#支持-pwa-碰到的一些坑\" href=\"#支持-pwa-碰到的一些坑\"></a></h2>\n<p>首先选择 inside 的主题其中一个理由是他原生支持 pwa ,所以省点事直接用, 刚好主题也简洁大方.</p>\n<p>把主题安装好配置好之后, 就开始我的适配 pwa 之旅了.</p>\n<p>首先我参考的是这个人的文章:<a href=\"https://developer.aliyun.com/article/744051\" target=\"_blank\">Hexo添加PWA支持-阿里云开发者社区 (aliyun.com)</a>, 可以参考下, 然后实际上他就是把官方文档的做法抄了一遍. 或者可以直接看 hexo-pwa 的官方文档: <a href=\"https://github.com/lavas-project/hexo-pwa\" target=\"_blank\">lavas-project/hexo-pwa: Hexo PWA plugin (github.com)</a>.</p>\n<blockquote>\n<h4 id=\"额外的收获\">额外的收获<a title=\"#额外的收获\" href=\"#额外的收获\"></a></h4>\n<p>获得了一个图片转换网站 <a href=\"https://www.iloveimg.com/\" target=\"_blank\">iLoveIMG | The fastest free web app for easy image modification.</a>. 这是文章里推荐使用的, 我用起来还可以, 我的头像就是这么生成的.</p>\n</blockquote>\n<p>然后就会碰到第一个坑: 编译报错, 提示 <code>property data not defined</code> .</p>\n<p>这个坑是因为 pwa 插件没有及时更新, hexo 大框架已经更新了一次了, 里面有个字段没有了. 然后插件的作者一直不更新到 npm 上导致会编译错误.</p>\n<p>我懒得重新给他搞一个 npm 库了, issue 有个大佬已经 pr 了一次了, 就是没合并进去. 修改的内容具体在这个连接里面, 实际上就修改了一行代码: <a href=\"https://github.com/lavas-project/hexo-pwa/pull/17/commits/22dcfc76bc48181c070f39d8be83a5854e7bf5ec\" target=\"_blank\">Fix bug by simbafs · Pull Request #17 · lavas-project/hexo-pwa (github.com)</a>. 我直接改了 node_module 里的源码, 然后结束这个问题.</p>\n<p>第二个问题, 是资源引用的问题, 我一开始不知道静态资源是要全部放在 source 里面才会被编译进去. 我傻愣愣的写在根目录下, 这个不算个大问题.</p>\n<p>第三个问题是 Safari 浏览器不会读取网站的 icon 作为应用的图标问题. 这个还是通过改源码实现的. 上面的文章里面有写, 要改 layout 里面的模版文件实现. 在我这具体就是 <code>hexo-theme-inside/layout/index.njk</code> 里面, 把文章里的代码加进去.</p>\n<p><s>所以这边文章的意义就是记录我的解决方案, 避免忘记啊, 我 tm 是直接改的源码哦.</s></p>\n","prev":{"title":"macOS的虚拟桌面和窗口管理","link":"2023/03/28/macOS的虚拟桌面和窗口管理"},"next":{"title":"texgt","link":"2023/03/27/texgt"},"plink":"https://man-her.tech/2023/03/27/博客网站搭建总结/","toc":[{"id":"我要支持-pwa","title":"我要支持 pwa","index":"1"},{"id":"pwa-的实现效果","title":"PWA 的实现效果","index":"2"},{"id":"支持-pwa-碰到的一些坑","title":"支持 PWA 碰到的一些坑","index":"3"}],"reading_time":"2087 words in 14 min"}