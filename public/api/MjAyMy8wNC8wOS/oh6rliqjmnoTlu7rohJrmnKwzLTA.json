{"title":"自动构建脚本3.0","date":"2023-04-09T01:42:32.000Z","date_formatted":{"ll":"Apr 9, 2023","L":"04/09/2023","MM-DD":"04-09"},"link":"2023/04/09/自动构建脚本3-0","tags":["bash","chatgpt","博客网站"],"updated":"2023-04-08T17:50:31.194Z","content":"<p>自动构建脚本迎来了新更新…</p>\n<blockquote>\n<h4 id=\"主要原因\">主要原因<a title=\"#主要原因\" href=\"#主要原因\"></a></h4>\n<p>之前的脚本是在服务器上 build 的, 我不希望在服务器上安装 node_module . 服务器应该只有 build 好的东西.</p>\n</blockquote>\n<p>所以, 自动构建脚本变成了两个, 一个是 <code>auto_build.sh</code> , 一个是 <code>auto_build_server.sh</code></p>\n<h2 id=\"主要调整\">主要调整<a title=\"#主要调整\" href=\"#主要调整\"></a></h2>\n<ol>\n<li>博文还是放在原来的位置.</li>\n<li>开了两个分支, 一个是 master 分支, 一个是 build 分支.</li>\n<li>在 master 分支写完之后, 运行脚本, 生成 build 的文件, 切换到 build 分支把这些编译好的静态文件上传到 build 分支上.</li>\n<li>服务器自动监控这个分支有没有发生更新.</li>\n</ol>\n<h2 id=\"auto_build.sh\">auto_build.sh<a title=\"#auto_build.sh\" href=\"#auto_build.sh\"></a></h2>\n<p>这个脚本主要完成的事情是在本地的 vscode 写完博客之后, 直接运行这个脚本.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 生成静态文件</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 提交当前分支的所有修改</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;Update site&quot;</span></span><br><span class=\"line\">git push github master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 切换到 build 分支并将 public 文件夹复制到该分支</span></span><br><span class=\"line\">git checkout build</span><br><span class=\"line\">git checkout master -- public/</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;Update build branch&quot;</span></span><br><span class=\"line\">git push github build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 返回 master 分支...</span></span><br><span class=\"line\">git checkout master</span><br></pre></td></tr></table></figure>\n<h2 id=\"auto_build_server.sh\">auto_build_server.sh<a title=\"#auto_build_server.sh\" href=\"#auto_build_server.sh\"></a></h2>\n<p>这个脚本主要做的事情是监控有没有发生修改:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">ROOT=<span class=\"string\">&quot;/home/Herman/Projects/Blog&quot;</span></span><br><span class=\"line\">LOG_FILE=<span class=\"string\">&quot;<span class=\"variable\">$ROOT</span>/logs/update.log&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将当前时间戳写入日志文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Checking for updates...&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"variable\">$ROOT</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">remote_hash=$(git ls-remote https://github.com/HYBB-rash/Blog.git -h refs/heads/build | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">local_hash=$(git rev-parse build)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Remote hash <span class=\"variable\">$remote_hash</span>. Local hash <span class=\"variable\">$local_hash</span>.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$remote_hash</span>&quot;</span> != <span class=\"string\">&quot;<span class=\"variable\">$local_hash</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Update found. Pulling changes and generating...&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 从 GitHub 拉取代码更新</span></span><br><span class=\"line\">    git pull &gt;&gt; <span class=\"variable\">$LOG_FILE</span> 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] Update and generation completed.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] No updates found.&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;[<span class=\"subst\">$(date)</span>] ..........................................................................................................&quot;</span> &gt;&gt; <span class=\"variable\">$LOG_FILE</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p><s>就是简单升级了下流程</s></p>\n","prev":{"title":"Hello World","link":"2023/04/09/hello-world"},"next":{"title":"macOS的虚拟桌面和窗口管理","link":"2023/03/28/macOS的虚拟桌面和窗口管理"},"plink":"https://man-her.tech/2023/04/09/自动构建脚本3-0/","toc":[{"id":"主要调整","title":"主要调整","index":"1"},{"id":"auto_build.sh","title":"auto_build.sh","index":"2"},{"id":"auto_build_server.sh","title":"auto_build_server.sh","index":"3"}],"reading_time":"476 words in 3 min"}